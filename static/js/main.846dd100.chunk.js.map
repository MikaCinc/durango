{"version":3,"sources":["data/kafici.js","Details.js","App.js","serviceWorker.js","index.js"],"names":["kafici","ID","Title","Logo","BrojMesta","BrojSlobodnihMesta","Details","Opis","Slike","RadnoVreme","Lokacija","Meni","props","useState","seats","setSeats","showModal","setShowModal","handleClose","className","onClick","setSelected","data","src","style","color","Carousel","map","item","index","Item","key","alt","time","timeStart","split","timeEnd","currentTime","moment","flag","isBetween","add","getRadnoVreme","window","open","Modal","show","onHide","centered","Body","App","noResults","setNoResults","filtered","setFiltered","selected","search","setSearch","useEffect","query","queryString","parse","location","view","parseInt","history","pushState","pathname","stringify","filterBySearch","length","arr","filter","trim","toLowerCase","indexOf","_","orderBy","when","collapse","left","duration","id","placeholder","value","onChange","e","target","Kafic","right","delay","find","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qPA6CeA,G,MA7CA,CACX,CACIC,GAAI,EACJC,MAAO,QACPC,KAAM,YACNC,UAAW,GACXC,mBAAoB,GACpBC,QAAS,CACLC,KAAM,ikBACNC,MAAO,CAAC,GAAI,GAAI,IAChBC,WAAY,gBACZC,SAAU,oJACVC,KAAM,KAGd,CACIV,GAAI,EACJC,MAAO,SACPC,KAAM,aACNC,UAAW,GACXC,mBAAoB,GACpBC,QAAS,CACLC,KAAM,ikBACNC,MAAO,CAAC,GAAI,GAAI,IAChBC,WAAY,gBACZC,SAAU,oJACVC,KAAM,KAGd,CACIV,GAAI,EACJC,MAAO,cACPC,KAAM,iBACNC,UAAW,GACXC,mBAAoB,EACpBC,QAAS,CACLC,KAAM,ikBACNC,MAAO,CAAC,GAAI,GAAI,IAChBC,WAAY,gBACZC,SAAU,8JACVC,KAAM,O,mEC6JHL,MA3Lf,SAAiBM,GAAO,MAMMC,mBAAS,GANf,mBAMbC,EANa,KAMNC,EANM,OAQcF,oBAAS,GARvB,mBAQbG,EARa,KAQFC,EARE,KAUdC,EAAc,kBAAMD,GAAa,IAoDvC,OACI,6BACI,yBAAKE,UAAU,iBACX,yBACIA,UAAU,SACVC,QAAS,WACLR,EAAMS,YAAY,QAGtB,uBAAGF,UAAU,kBAAb,kBAGA,wCAEJ,wBAAIA,UAAU,yBAAyBP,EAAMU,KAAKpB,OAClD,yBAAKqB,IAAK,WAAaX,EAAMU,KAAKnB,KAAMgB,UAAU,iBAEtD,yBAAKA,UAAU,cACX,wBAAIA,UAAU,qBAAd,mBAEI,0BAAMK,MAAO,CACTC,MAAOb,EAAMU,KAAKjB,mBAAqB,EAAI,UAAY,YAGnD,IAAMO,EAAMU,KAAKjB,mBAAqB,KANlD,KASOO,EAAMU,KAAKlB,YAGtB,yBACIe,UAAU,0BACVC,QAAS,WAnFIH,GAAa,KAuF1B,uBAAGE,UAAU,6BAAb,QAGA,wBAAIA,UAAU,iBAAd,wBA3DJ,kBAACO,EAAA,EAAD,KAEQ,CAAC,aAAc,aAAc,cAAcC,KAAI,SAACC,EAAMC,GAClD,OAAO,kBAACH,EAAA,EAASI,KAAV,CAAeC,IAAKF,GACvB,yBACIV,UAAU,gBACVI,IAAK,wBAA0BK,EAC/BI,IAAMH,EAAQ,EAAK,iBAyDvC,yBAAKV,UAAU,cACX,uBAAGA,UAAU,sCAAb,eA9FU,WAClB,IAAIc,EAAOrB,EAAMU,KAAKhB,QAAQG,WAC1ByB,EAAYD,EAAKE,MAAM,OAAO,GAC9BC,EAAUH,EAAKE,MAAM,OAAO,GAC5BE,EAAcC,MACdC,GAAO,EAMX,OAJID,IAAOF,EAAS,SAASI,UAAUF,IAAO,QAAS,SAAUA,IAAO,QAAS,YAC7EC,GAAO,GAGPF,EAAYG,UAAUF,IAAOJ,EAAW,SAAUI,IAAOF,EAAS,SAASK,IAAIF,EAAO,EAAI,EAAG,SACtF,wBACHpB,UAAU,iBAEV,0BAAMA,UAAU,YAAhB,cACA,0BAAMK,MAAO,CAAEC,MAAO,YAAcQ,IAKrC,wBAAId,UAAU,iBACjB,0BAAMA,UAAU,YAAhB,eACA,0BAAMK,MAAO,CAAEC,MAAO,YAAcQ,IA0E/BS,IAEL,yBACIvB,UAAU,0BACVC,QAAS,WACLuB,OAAOC,KAAKhC,EAAMU,KAAKhB,QAAQI,SAAU,YAG7C,uBAAGS,UAAU,6BAAb,OAGA,wBAAIA,UAAU,iBAAd,yBAEJ,yBAAKA,UAAU,eACX,yBAAKA,UAAU,oBACX,uBAAGA,UAAU,sCAAb,QAGA,wBAAIA,UAAU,0BAAd,YAEJ,uBAAGA,UAAU,oBAAoBP,EAAMU,KAAKhB,QAAQC,OAGxD,kBAACsC,EAAA,EAAD,CACIC,KAAM9B,EACN+B,OAAQ7B,EACR8B,UAAQ,GAER,kBAACH,EAAA,EAAMI,KAAP,KACI,yBAAK9B,UAAU,sBACX,wBAAIA,UAAU,qBAAd,cACA,uBAAGA,UAAU,4BACT,0BACIA,UAAU,YACVC,QAAS,WACDN,EAAQ,GACRC,EAASD,EAAQ,KAJ7B,OAQA,8BAAOA,GACP,0BACIK,UAAU,YACVC,QAAS,WACLL,EAASD,EAAQ,KAHzB,SAQR,yBAAKK,UAAU,iBACX,wBAAIA,UAAU,qBAAd,iBACA,uBAAGA,UAAU,+BAAb,qBAIJ,4BACIA,UAAU,yBACVC,QAAS,WACLF,MAHR,kBAQA,4BACIC,UAAU,wBACVC,QAAS,WACLF,MAHR,gB,iBC7BLgC,MA7If,SAAatC,GAAQ,IAAD,EACgBC,oBAAS,GADzB,mBACXsC,EADW,KACAC,EADA,OAEcvC,mBAAS,YAAIS,IAF3B,mBAEX+B,EAFW,KAEDC,EAFC,OAGczC,mBAAS,MAHvB,mBAGX0C,EAHW,KAGDlC,EAHC,OAIUR,mBAAS,KAJnB,mBAIX2C,EAJW,KAIHC,EAJG,KAMlBC,qBAAU,WACR,IAAIC,EAAQC,IAAYC,MAAMlB,OAAOmB,SAASN,QAE1CG,EAAMI,MACR1C,EAAY2C,SAASL,EAAMI,KAAM,OAElC,IAEHL,qBAAU,WACJH,EACFZ,OAAOsB,QAAQC,UAAU,GAAI,GAAIvB,OAAOmB,SAASK,SAAW,IAAMP,IAAYQ,UAAU,CAAE,KAAQb,KAElGZ,OAAOsB,QAAQC,UAAU,GAAI,GAAIvB,OAAOmB,SAASK,YAElD,CAACZ,IAEJG,qBAAU,WACRJ,EAAYe,OACX,CAACb,IAEJE,qBAAU,WACRN,EAAiC,IAApBC,EAASiB,UACrB,CAACjB,IAGJ,IAAMgB,EAAiB,WAAiB,IAAhBE,EAAe,uDAATjD,EACxB+B,EAAWkB,EAAIC,QAAO,YACxB,OADuC,EAAZtE,MACduE,OAAOC,cAAcC,QAAQnB,EAAOiB,OAAOC,gBAAkB,KAG5E,OAAOE,IAAEC,QAAQxB,EAAU,qBAAsB,SA0EnD,OACE,yBAAKlC,UAAU,OACb,kBAAC,IAAD,CACE2D,MAAOvB,EACPwB,UAAQ,EACRC,MAAI,EACJC,SAAU,KAEV,yBAAK9D,UAAU,SAEVoC,GAxBP,kBAAC,WAAD,KACE,yBAAKpC,UAAU,cACb,uBAAGA,UAAU,aAAb,WAzDJ,yBAAKA,UAAU,UACb,uBAAGA,UAAU,iBAAiB+D,GAAG,cAAjC,UAGA,2BACE/D,UAAU,cACVgE,YAAY,mBACZC,MAAO5B,EACP6B,SAAU,SAACC,GACT7B,EAAU6B,EAAEC,OAAOH,YAOpBjC,EACH,yBAAKhC,UAAU,sBACf,2EAGA,uBACEA,UAAU,gCADZ,gCAMAkC,EAAS1B,KAAI,SAAC6D,GACd,OAAO,yBACLzD,IAAKyD,EAAMvF,GACXkB,UAAU,oBACVC,QAAS,WACPC,EAAYmE,EAAMvF,MAGpB,yBAAKkB,UAAU,WAAWI,IAAK,WAAaiE,EAAMrF,OAClD,wBAAIgB,UAAU,sBAAsBqE,EAAMtF,OAC1C,uBAAGiB,UAAU,mCACVqE,EAAMnF,mBADT,MACgCmF,EAAMpF,WAEtC,uBACEe,UAAU,4BACVK,MAAO,CACLC,MAAO+D,EAAMnF,mBAAqB,EAAI,UAAY,YAHtD,iBA2CJ,kBAAC,IAAD,CACEyE,KAAMvB,EACNwB,UAAQ,EACRU,OAAK,EACLC,MAAO,GACPT,SAAU,KAEV,yBAAK9D,UAAU,WAEXoC,GAAY,kBAAC,EAAD,CAASjC,KAAMsD,IAAEe,KAAKrE,EAAM,CAAE,GAAMiC,IAAalC,YAAaA,QCtIlEuE,QACW,cAA7BjD,OAAOmB,SAAS+B,UAEe,UAA7BlD,OAAOmB,SAAS+B,UAEhBlD,OAAOmB,SAAS+B,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.846dd100.chunk.js","sourcesContent":["const kafici = [\r\n    {\r\n        ID: 1,\r\n        Title: 'Vinyl',\r\n        Logo: 'vinyl.png',\r\n        BrojMesta: 32,\r\n        BrojSlobodnihMesta: 22,\r\n        Details: {\r\n            Opis: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.',\r\n            Slike: ['', '', ''],\r\n            RadnoVreme: '13:00 - 23:30',\r\n            Lokacija: 'https://www.google.com/maps/place/Vinyl+Cafe/@43.3179874,21.8948292,15z/data=!4m5!3m4!1s0x0:0xa52fd515620420f!8m2!3d43.3179874!4d21.8948292?hl=sr',\r\n            Meni: ''\r\n        },\r\n    },\r\n    {\r\n        ID: 2,\r\n        Title: 'Square',\r\n        Logo: 'Square.jpg',\r\n        BrojMesta: 68,\r\n        BrojSlobodnihMesta: 31,\r\n        Details: {\r\n            Opis: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.',\r\n            Slike: ['', '', ''],\r\n            RadnoVreme: '18:00 - 04:00',\r\n            Lokacija: 'https://www.google.com/maps/place/Square+Cafe/@43.3203283,21.917684,15z/data=!4m5!3m4!1s0x0:0xa63c72132475dc46!8m2!3d43.3203283!4d21.917684?hl=sr',\r\n            Meni: ''\r\n        },\r\n    },\r\n    {\r\n        ID: 3,\r\n        Title: 'Dnevna soba',\r\n        Logo: 'dnevnaSoba.jpg',\r\n        BrojMesta: 42,\r\n        BrojSlobodnihMesta: 0,\r\n        Details: {\r\n            Opis: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.',\r\n            Slike: ['', '', ''],\r\n            RadnoVreme: '06:50 - 00:10',\r\n            Lokacija: 'https://www.google.com/maps/place/Caffe+bar+Dnevna+soba/@43.3196389,21.896984,15z/data=!4m5!3m4!1s0x0:0xf0256956dfa8b74d!8m2!3d43.3196389!4d21.896984?hl=sr',\r\n            Meni: ''\r\n        },\r\n    },\r\n]\r\n\r\nexport default kafici;\r\n","/* React */\r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\n/* Libraries */\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\nimport { Button, Modal, Carousel } from 'react-bootstrap';\r\n\r\n\r\nfunction Details(props) {\r\n\r\n    /* useEffect(() => {\r\n        console.log('herrerre')\r\n    }, []) */\r\n\r\n    const [seats, setSeats] = useState(3);\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const handleClose = () => setShowModal(false);\r\n    const handleShow = () => setShowModal(true);\r\n\r\n    const getRadnoVreme = () => {\r\n        let time = props.data.Details.RadnoVreme,\r\n            timeStart = time.split(' - ')[0],\r\n            timeEnd = time.split(' - ')[1],\r\n            currentTime = moment(),\r\n            flag = false;\r\n\r\n        if (moment(timeEnd, 'HH:mm').isBetween(moment('00:00', 'HH:mm'), moment('05:00', 'HH:mm'))) {\r\n            flag = true;\r\n        };\r\n\r\n        if (currentTime.isBetween(moment(timeStart, 'HH:mm'), moment(timeEnd, 'HH:mm').add(flag ? 1 : 0, 'days'))) {\r\n            return <h1\r\n                className=\"detailRowText\"\r\n            >\r\n                <span className=\"greyText\">Otvoreno: </span>\r\n                <span style={{ color: '#009A1F' }}>{time}</span>\r\n            </h1>\r\n        };\r\n\r\n\r\n        return <h1 className=\"detailRowText\">\r\n            <span className=\"greyText\">Zatvoreno: </span>\r\n            <span style={{ color: '#C50505' }}>{time}</span>\r\n        </h1>;\r\n    }\r\n\r\n    const renderCarousel = () => {\r\n        return (\r\n            <Carousel>\r\n                {\r\n                    ['kafic1.jpg', 'kafic2.jpg', 'kafic3.jpg'].map((item, index) => {\r\n                        return <Carousel.Item key={index}>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src={'./slike/carouselMock/' + item}\r\n                                alt={(index + 1) + '. slika'}\r\n                            />\r\n                            {/* <Carousel.Caption>\r\n                                <h3>{'Glavni tekst ' + (index + 1)}</h3>\r\n                                <p>{'Tekst opisa ' + (index + 1)}</p>\r\n                            </Carousel.Caption> */}\r\n                        </Carousel.Item>\r\n                    })\r\n                }\r\n            </Carousel>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"detailsHeader\">\r\n                <div\r\n                    className=\"goBack\"\r\n                    onClick={() => {\r\n                        props.setSelected(null)\r\n                    }}\r\n                >\r\n                    <i className=\"material-icons\">\r\n                        arrow_back_ios\r\n                    </i>\r\n                    <span>Nazad</span>\r\n                </div>\r\n                <h1 className=\"detailsTitle boldText\">{props.data.Title}</h1>\r\n                <img src={'./slike/' + props.data.Logo} className=\"detailsLogo\" />\r\n            </div>\r\n            <div className=\"detailsRow\">\r\n                <h1 className=\"greyText boldText\">\r\n                    Slobodnih mesta:\r\n                    <span style={{\r\n                        color: props.data.BrojSlobodnihMesta > 0 ? '#3185FC' : '#9A031E',\r\n                    }}>\r\n                        {\r\n                            ' ' + props.data.BrojSlobodnihMesta + ' '\r\n                        }\r\n                    </span>\r\n                    / {props.data.BrojMesta}\r\n                </h1>\r\n            </div>\r\n            <div\r\n                className=\"detailsRow clickableRow\"\r\n                onClick={() => {\r\n                    handleShow()\r\n                }}\r\n            >\r\n                <i className=\"material-icons detailIcon\">\r\n                    book\r\n                </i>\r\n                <h1 className=\"detailRowText\">Napravi rezervaciju</h1>\r\n            </div>\r\n            {\r\n                renderCarousel()\r\n            }\r\n            <div className=\"detailsRow\">\r\n                <i className=\"material-icons detailIcon greyText\">\r\n                    access_time\r\n                </i>\r\n                {getRadnoVreme()}\r\n            </div>\r\n            <div\r\n                className=\"detailsRow clickableRow\"\r\n                onClick={() => {\r\n                    window.open(props.data.Details.Lokacija, '_blank');\r\n                }}\r\n            >\r\n                <i className=\"material-icons detailIcon\">\r\n                    map\r\n                </i>\r\n                <h1 className=\"detailRowText\">Prikaži na mapi</h1>\r\n            </div>\r\n            <div className=\"detailAbout\">\r\n                <div className=\"detailsRowSimple\">\r\n                    <i className=\"material-icons detailIcon greyText\">\r\n                        info\r\n                    </i>\r\n                    <h1 className=\"detailRowText greyText\">O mestu</h1>\r\n                </div>\r\n                <p className=\"detailsAboutText\">{props.data.Details.Opis}</p>\r\n            </div>\r\n\r\n            <Modal\r\n                show={showModal}\r\n                onHide={handleClose}\r\n                centered\r\n            >\r\n                <Modal.Body>\r\n                    <div className=\"modalInputDiv w-50\">\r\n                        <h5 className=\"greyText boldText\">Broj mesta</h5>\r\n                        <p className=\"modalInputText greyText \">\r\n                            <span\r\n                                className=\"clickable\"\r\n                                onClick={() => {\r\n                                    if (seats > 1) {\r\n                                        setSeats(seats - 1)\r\n                                    }\r\n                                }}\r\n                            > - </span>\r\n                            <span>{seats}</span>\r\n                            <span\r\n                                className=\"clickable\"\r\n                                onClick={() => {\r\n                                    setSeats(seats + 1)\r\n                                }}\r\n                            > + </span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"modalInputDiv\">\r\n                        <h5 className=\"greyText boldText\">Datum & vreme</h5>\r\n                        <p className=\"greyText modalInputTextDate\">\r\n                            12/01/2020 21:30\r\n                        </p>\r\n                    </div>\r\n                    <button\r\n                        className=\"buttonReserve boldText\"\r\n                        onClick={() => {\r\n                            handleClose()\r\n                        }}\r\n                    >\r\n                        Rezerviši\r\n                        </button>\r\n                    <button\r\n                        className=\"buttonCancel boldText\"\r\n                        onClick={() => {\r\n                            handleClose()\r\n                        }}\r\n                    >\r\n                        Odustani\r\n                        </button>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Details;\r\n","/* React */\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './App.css';\n/* Data */\nimport data from './data/kafici';\n/* Libraries */\nimport _ from 'lodash';\nimport queryString from 'query-string';\n/* Pages */\nimport Details from './Details';\n/* Animations */\nimport Slide from 'react-reveal/Slide';\n\nfunction App(props) {\n  const [noResults, setNoResults] = useState(false);\n  const [filtered, setFiltered] = useState([...data]);\n  const [selected, setSelected] = useState(null);\n  const [search, setSearch] = useState('w');\n\n  useEffect(() => {\n    let query = queryString.parse(window.location.search);\n\n    if (query.view) {\n      setSelected(parseInt(query.view, 10));\n    };\n  }, [])\n\n  useEffect(() => {\n    if (selected) {\n      window.history.pushState({}, '', window.location.pathname + \"?\" + queryString.stringify({ 'view': selected }));\n    } else {\n      window.history.pushState({}, '', window.location.pathname);\n    }\n  }, [selected])\n\n  useEffect(() => {\n    setFiltered(filterBySearch())\n  }, [search])\n\n  useEffect(() => {\n    setNoResults(filtered.length === 0);\n  }, [filtered])\n\n\n  const filterBySearch = (arr = data) => {\n    let filtered = arr.filter(({ Title }) => {\n      return Title.trim().toLowerCase().indexOf(search.trim().toLowerCase()) > -1;\n    });\n\n    return _.orderBy(filtered, 'BrojSlobodnihMesta', 'desc');\n  }\n\n  const Search = () => {\n    return (\n      <div className=\"search\">\n        <i className=\"material-icons\" id=\"searchIcon\">\n          search\n        </i>\n        <input\n          className=\"searchInput\"\n          placeholder=\"Pretraži...\"\n          value={search}\n          onChange={(e) => {\n            setSearch(e.target.value);\n          }} />\n      </div>\n    )\n  }\n\n  const List = () => {\n    return noResults\n      ? <div className=\"noResults boldText\">\n        <h1>\n          Mesto koje tražite nije pronađeno\n        </h1>\n        <i\n          className=\"material-icons noResultsIcon\"\n        >\n          sentiment_very_dissatisfied\n      </i>\n      </div>\n      : filtered.map((Kafic) => {\n        return <div\n          key={Kafic.ID}\n          className=\"singleLine button\"\n          onClick={() => {\n            setSelected(Kafic.ID)\n          }}\n        >\n          <img className=\"listLogo\" src={'./slike/' + Kafic.Logo} />\n          <h1 className=\"lineTitle boldText\">{Kafic.Title}</h1>\n          <p className=\"lineFreeSeats boldText greyText\">\n            {Kafic.BrojSlobodnihMesta} / {Kafic.BrojMesta}\n          </p>\n          <i\n            className=\"material-icons peopleIcon\"\n            style={{\n              color: Kafic.BrojSlobodnihMesta > 0 ? '#3185FC' : '#9A031E',\n            }}\n          >\n            people\n            </i>\n        </div>\n      })\n\n  }\n\n  const ListAndSearch = () => {\n    return (\n      <Fragment>\n        <div className=\"mainHeader\">\n          <p className=\"mainTitle\">Durango</p>\n          {\n            Search()\n          }\n        </div>\n        {\n          List()\n        }\n      </Fragment>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <Slide\n        when={!selected}\n        collapse\n        left\n        duration={300}\n      >\n        <div className=\"list\">\n          {\n            !selected && ListAndSearch()\n          }\n        </div>\n      </Slide>\n      <Slide\n        when={selected}\n        collapse\n        right\n        delay={10}\n        duration={300}\n      >\n        <div className='details'>\n          {\n            selected && <Details data={_.find(data, { 'ID': selected })} setSelected={setSelected} />\n          }\n        </div>\n      </Slide>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}