{"version":3,"sources":["icons/seat_gray.svg","icons/watchBlue.svg","icons/minus.svg","CustomIcons/noResults.png","CustomIcons/noFavorites.png","icons/gearBlue.svg","CustomIcons/workInProgress.png","icons/star_white_border.svg","icons/infoWhite.svg","icons/bookWhite.svg","icons/nearMeWhite.svg","icons/titleBlue.svg","icons/callBlue.svg","icons/audioBlue.svg","icons/audioLightblue.svg","icons/locationBlue.svg","icons/menuBookWhite.svg","CustomIcons/workHours.png","carouselMock/kafic1.jpg","carouselMock/kafic2.jpg","carouselMock/kafic3.jpg","icons/gearOutlineBlue.svg","ExtendedLogo/Logo.png","CustomIcons/defaultLogo.png","data/user.js","Screens/LoginScreen/index.js","data/kafici.js","Components/ComingSoonModal.js","library/common.js","Context/dataContext.js","Screens/Home.js","Components/DetailsHeader.js","Screens/Settings.js","Context/objectContext.js","Screens/Object/ObjectLogin.js","Components/Claps.js","Screens/Details.js","Screens/MoreDetails.js","Screens/Reserve.js","Stacks/ObjectProfileStackOfScreens.js","Components/IPHeader.js","Screens/Object/ObjectSettings.js","Stacks/InputPanelStackOfScreens.js","Screens/Object/index.js","App.js","serviceWorker.js","index.js","icons/plus.svg","icons/doneWhite.svg","icons/star.svg","icons/seat.svg","icons/seat_orange.svg","icons/clearWhite.svg","icons/backArrow.svg"],"names":["module","exports","User","ID","Name","Email","imageUrl","Location","Permissions","canReserve","Reservation","Time","Claps","Favourites","LoginScreen","props","useState","isSuccess","setIsSuccess","profileImage","setProfileImage","profileName","setProfileName","useEffect","UserLoc","JSON","parse","localStorage","getItem","timeout","a","b","aKeys","Object","keys","sort","bKeys","stringify","compareKeys","setTimeout","history","push","clearTimeout","removeItem","className","when","appear","bottom","delay","duration","src","Logo","clientId","buttonText","onSuccess","response","profileObj","name","obj","googleId","email","setItem","onFailure","alert","cookiePolicy","render","renderProps","onClick","disabled","appId","autoLoad","fields","authType","isDisabled","tag","callback","picture","data","url","console","log","kafici","id","title","logo","totalSpots","freeSpots","spotsUpdatedAt","reservations","details","description","images","workingHours","location","menu","address","phoneNumber","totalClaps","numberOfGrades","userAplauza","music","volume","ComingSoonModal","show","onHide","Modal","centered","Body","Img","style","width","marginBottom","isOpen","day","moment","split","openingTime","closingTime","getMomentForTime","time","hours","minutes","set","seconds","millisecond","opening","closing","isSame","isBefore","add","days","isBetween","DataContext","React","createContext","Provider","DataProvider","Consumer","setUser","Data","setData","filteredData","setFilteredData","search","setSearch","filters","setFilters","sortedOpen","setSortedOpen","sortedClosed","setSortedClosed","currentData","setCurrentData","showComingSoonModal","setShowComingSoonModal","timer","setTimer","loading","setLoading","isAuthorized","fetch","then","json","length","catch","message","UserMock","filterBySearch","indexOf","filterByOmiljeni","isoWeekday","filter","item","int","setInterval","simulateUpdateData","clearInterval","IDs","_","map","randomIDs","slice","shuffle","includes","getNewNumber","valueOf","random","old","bulk","Math","floor","filtered","trim","toLowerCase","orderBy","value","changeClaps","nextState","toggleFavourite","fav","f","changeSearch","changeData","restOfData","find","toggleFilters","nextFilters","fastReserve","children","LoaderComponent","useContext","type","color","height","visible","Search","placeholder","onChange","e","target","getTrimmedTitle","n","Separator","LabelBadge","label","object","isReserved","isAfter","interval","updateTimer","utc","diff","format","backgroundColor","FavoritBadge","Star","UpdatedBadge","fromNow","setLabel","updateLabel","background","List","Array","isArray","easing","appearAnimation","enterAnimation","leaveAnimation","staggerDurationBy","Kafic","key","preporuka","opposite","cascade","process","defaultLogo","Seat","SeatOrange","SeatGray","noFavoritesIcon","noResultsIcon","ListAndSearch","isTurnedOn","GearBlue","MainScreen","Home","DetailsHeader","isSticky","back","BackArrow","Settings","ObjectContext","marginTop","right","Done","Plus","Clear","Image","fluid","ObjectProvider","setID","findData","parseInt","ObjectLogin","setId","replace","entering","canvasClassName","params","particles","number","density","enable","value_area","interactivity","events","onhover","mode","showSlider","setShowSlider","showModal","setShowModal","localClaps","setLocalClaps","slider","useRef","current","addEventListener","detail","removeEventListener","ceildValue","ceil","finishedRating","num","handleClose","left","emoji","step","ref","from","to","padding","toPrecision","placeholderObj","UkupnoMestaBadge","top","fontSize","Details","useParams","isFavourite","flag","open","getRadnoVreme","Book","Info","spy","StarOutline","window","NearMe","restOfPage","daysOfTheWeek","MoreDetails","showWHModal","setShowWHModal","Carousel","slide","kafic1","kafic2","kafic3","index","Item","alt","Title","href","Call","i","inRange","Audio","AudioLight","cursor","Watch","MenuBook","WorkingHours","Reserve","Date","date","setDate","setTime","seats","setSeats","calendarIcon","maxDetail","minDate","maxDate","toDate","calendarClassName","disableClock","clockIcon","Minus","routes","path","Component","ObjectProfileStackOfScreens","splitted","pathname","getBackURL","TransitionGroup","CSSTransition","in","classNames","unmountOnExit","exact","match","IPHeader","useHistory","currentTime","setCurrentTime","displayHeader","renderLeftComponent","GearOutlineBlue","renderRightComponent","currentNumber","setCurrentNumber","textAlign","min","max","Number","range","setTitle","setTotalSpots","setDescription","setLocation","setAddress","setMusic","setPhoneNumber","setWorkingHours","display","flexDirection","justifyContent","margin","position","InputPanelStackOfScreens","setVolume","level","renderFixedButtons","UserStackOfScreens","__RouterContext","component","ObjectStackOfScreens","App","locale","Login","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","immediate","navigator","serviceWorker","getRegistration","registration","update","register","onupdatefound","installingWorker","installing","onstatechange","state","controller","confirm","loaction","reload","skipWaiting","onUpdate","error","ReactDOM","document","getElementById","URL","origin","doRegister","headers","contentType","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.925d92f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/seat_gray.0fcc2739.svg\";","module.exports = __webpack_public_path__ + \"static/media/watchBlue.7d4403df.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.70dc2030.svg\";","module.exports = __webpack_public_path__ + \"static/media/noResults.57a946ba.png\";","module.exports = __webpack_public_path__ + \"static/media/noFavorites.05e35132.png\";","module.exports = __webpack_public_path__ + \"static/media/gearBlue.86220436.svg\";","module.exports = __webpack_public_path__ + \"static/media/workInProgress.19c824e6.png\";","module.exports = __webpack_public_path__ + \"static/media/star_white_border.825836a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/infoWhite.d4077530.svg\";","module.exports = __webpack_public_path__ + \"static/media/bookWhite.852d74cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/nearMeWhite.a60b6556.svg\";","module.exports = __webpack_public_path__ + \"static/media/titleBlue.d533da91.svg\";","module.exports = __webpack_public_path__ + \"static/media/callBlue.568b344d.svg\";","module.exports = __webpack_public_path__ + \"static/media/audioBlue.d3318f47.svg\";","module.exports = __webpack_public_path__ + \"static/media/audioLightblue.c793620e.svg\";","module.exports = __webpack_public_path__ + \"static/media/locationBlue.52061cbe.svg\";","module.exports = __webpack_public_path__ + \"static/media/menuBookWhite.4a58ab97.svg\";","module.exports = __webpack_public_path__ + \"static/media/workHours.8656e816.png\";","module.exports = __webpack_public_path__ + \"static/media/kafic1.4fbc8bcd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kafic2.9ff91612.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kafic3.ba378676.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gearOutlineBlue.4da905ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.eb5c53a5.png\";","module.exports = __webpack_public_path__ + \"static/media/defaultLogo.5735143b.png\";","let User = {\r\n    ID: '',\r\n    Name: '',\r\n    Email: '',\r\n    imageUrl: '',\r\n    Location: '',\r\n    Permissions: {\r\n        canReserve: true,\r\n    },\r\n    Reservation: {\r\n        ID: null,\r\n        Time: '',\r\n    },\r\n    Claps: [],\r\n    Favourites: []\r\n};\r\n\r\nexport default User;","import React, { useState, useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GoogleLogin from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { Fade, Zoom } from 'react-reveal';\r\n\r\n/* Data */\r\nimport User from '../../data/user';\r\n\r\n/* Logo */\r\nimport Logo from '../../ExtendedLogo/Logo.png';\r\n\r\nconst LoginScreen = props => {\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n    const [profileImage, setProfileImage] = useState('');\r\n    const [profileName, setProfileName] = useState('');\r\n\r\n    useEffect(() => {\r\n        let UserLoc = JSON.parse(localStorage.getItem('User')),\r\n            timeout = null;\r\n\r\n        if (!UserLoc) {\r\n            return;\r\n        }\r\n\r\n        function compareKeys(a, b) {\r\n            var aKeys = Object.keys(a).sort();\r\n            var bKeys = Object.keys(b).sort();\r\n            return JSON.stringify(aKeys) === JSON.stringify(bKeys);\r\n        }\r\n\r\n        if (!compareKeys(User, UserLoc)) {\r\n            localStorage.removeItem('User');\r\n            return;\r\n        }\r\n\r\n        if (UserLoc && UserLoc.ID) {\r\n            setProfileImage(UserLoc.imageUrl)\r\n            setProfileName(UserLoc.Name)\r\n            setIsSuccess(true);\r\n            timeout = setTimeout(() => {\r\n                // props.setAuthorized(true);\r\n                props.history.push('/durango/app/home');\r\n            }, 2000);\r\n        }\r\n\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const responseGoogleSuccess = (response) => {\r\n        // console.log(response)\r\n        setIsSuccess(true);\r\n        setProfileImage(response.profileObj.imageUrl)\r\n        setProfileName(response.profileObj.name)\r\n\r\n        let obj = {\r\n            ...User,\r\n            ID: response.profileObj.googleId,\r\n            Email: response.profileObj.email,\r\n            imageUrl: response.profileObj.imageUrl,\r\n            Name: response.profileObj.name,\r\n        };\r\n\r\n        localStorage.setItem('User', JSON.stringify(obj));\r\n\r\n        setTimeout(() => {\r\n            // props.setAuthorized(true);\r\n            props.history.push('/durango/app/home')\r\n        }, 2000);\r\n    }\r\n\r\n    const responseGoogleFailure = (response) => {\r\n        // console.log(response)\r\n        alert('Something is wrong with Google login');\r\n    }\r\n\r\n    const responseFacebook = (response) => {\r\n        // console.log(response)\r\n        setIsSuccess(true);\r\n        setProfileImage(response.picture.data.url)\r\n        setProfileName(response.name)\r\n        setTimeout(() => {\r\n            // props.setAuthorized(true);\r\n            props.history.push('/durango/app/home')\r\n        }, 2000)\r\n    }\r\n\r\n    return <div className=\"loginScreen\">\r\n        <Fade\r\n            when={true}\r\n            appear\r\n            bottom\r\n            delay={500}\r\n            duration={1000}\r\n        >\r\n            <img className=\"loginLogo\" src={Logo} />\r\n        </Fade>\r\n        <p className=\"loginParagraph\">Najlakši način za pregled broja slobodnih mesta u kafiću ili restoranu!</p>\r\n        <Zoom\r\n            when={isSuccess}\r\n            bottom\r\n            duration={1000}\r\n        >\r\n            <div className=\"loginDetailsDiv\">\r\n                <img\r\n                    className=\"loginProfileImageLoaded\"\r\n                    src={profileImage}\r\n                />\r\n                <p className=\"loginParagraph\">{profileName}</p>\r\n            </div>\r\n        </Zoom>\r\n        {\r\n            !isSuccess && <Fragment>\r\n                <GoogleLogin\r\n                    clientId=\"873302302315-mv8lh0772kbe55nvh687qpv8ddvlv9t0.apps.googleusercontent.com\"\r\n                    buttonText=\"Login\"\r\n                    onSuccess={responseGoogleSuccess}\r\n                    onFailure={responseGoogleFailure}\r\n                    cookiePolicy={'single_host_origin'}\r\n                    render={renderProps => (\r\n                        <div\r\n                            className=\"google-btn\"\r\n                            onClick={renderProps.onClick}\r\n                            disabled={renderProps.disabled}\r\n                        >\r\n                            <img\r\n                                className=\"google-icon\"\r\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                            />\r\n                            <p className=\"google-text\"><b>Sign in with Google</b></p>\r\n                        </div>\r\n                    )}\r\n                />\r\n                <FacebookLogin\r\n                    appId=\"503529696932140\"\r\n                    autoLoad={false}\r\n                    fields=\"name,email,picture\"\r\n                    authType=\"reauthenticate\"\r\n                    isDisabled={true} //@todo\r\n                    tag={\r\n                        renderProps => (\r\n                            <div\r\n                                className=\"facebook-btn\"\r\n                                onClick={renderProps.onClick}\r\n                            >\r\n                                <img\r\n                                    className=\"facebook-icon\"\r\n                                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c2/F_icon.svg/267px-F_icon.svg.png\"\r\n                                />\r\n                                <p className=\"facebook-text\"><b>Sign in with Facebook</b></p>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    /* onClick={(nesto) => {\r\n                        console.log('nesto', nesto)\r\n                    }} */\r\n                    callback={responseFacebook}\r\n                    onFailure={() => {\r\n                        console.log('Something is wrong with Facebook sign in')\r\n                    }}\r\n                />\r\n            </Fragment>\r\n        }\r\n    </div>;\r\n};\r\n\r\nLoginScreen.propTypes = {};\r\n\r\nexport default LoginScreen;","import moment from 'moment';\r\n\r\nconst kafici = [\r\n    {\r\n        id: 'ab12ba1',\r\n        title: 'Vinyl',\r\n        logo: 'vinyl.png',\r\n        totalSpots: 32,\r\n        freeSpots: 8,\r\n        spotsUpdatedAt: 1589897781000,\r\n        reservations: [],\r\n        details: {\r\n            description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.',\r\n            images: '',\r\n            workingHours: [\r\n                '9:00 - 23:30',\r\n                '9:00 - 23:30',\r\n                '9:00 - 23:30',\r\n                '9:00 - 23:30',\r\n                '9:00 - 23:30',\r\n                '9:00 - 23:30',\r\n                '9:00 - 23:30',\r\n            ],\r\n            location: 'https://www.google.com/maps/place/Vinyl+Cafe/@43.3179874,21.8948292,15z/data=!4m5!3m4!1s0x0:0xa52fd515620420f!8m2!3d43.3179874!4d21.8948292?hl=sr',\r\n            menu: '',\r\n            address: 'Majakovskog bb 13/4',\r\n            phoneNumber: '(064) 776-332',\r\n            totalClaps: 135,\r\n            numberOfGrades: 38,\r\n            userAplauza: 0,\r\n            music: 'Pop',\r\n            volume: 3\r\n        }\r\n    },\r\n    {\r\n        id: 'ab12ba2',\r\n        title: 'Distrikt',\r\n        logo: 'distrikt.png',\r\n        totalSpots: 68,\r\n        freeSpots: 7,\r\n        spotsUpdatedAt: 1589897781000,\r\n        reservations: [],\r\n        details: {\r\n            description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.',\r\n            images: '',\r\n            workingHours: [\r\n                '08:00 - 04:15',\r\n                '08:00 - 04:15',\r\n                '08:00 - 04:15',\r\n                '08:00 - 04:15',\r\n                '08:00 - 04:15',\r\n                '08:00 - 04:15',\r\n                '08:00 - 04:15',\r\n            ],\r\n            location: 'https://www.google.com/maps/place/Square+Cafe/@43.3203283,21.917684,15z/data=!4m5!3m4!1s0x0:0xa63c72132475dc46!8m2!3d43.3203283!4d21.917684?hl=sr',\r\n            menu: '',\r\n            address: 'Majakovskog bb 13/4',\r\n            phoneNumber: '(064) 776-332',\r\n            totalClaps: 148,\r\n            numberOfGrades: 38,\r\n            music: 'Pop',\r\n            volume: 3\r\n        }\r\n    },\r\n    {\r\n        id: 'ab12ba3',\r\n        title: 'Dnevna soba',\r\n        logo: 'dnevnaSoba.jpg',\r\n        totalSpots: 42,\r\n        freeSpots: 0,\r\n        spotsUpdatedAt: 1589897781000,\r\n        reservations: [],\r\n        details: {\r\n            description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.',\r\n            images: '',\r\n            workingHours: [\r\n                '12:50 - 00:10',\r\n                '12:50 - 00:10',\r\n                '12:50 - 00:10',\r\n                '12:50 - 00:10',\r\n                '12:50 - 00:10',\r\n                '12:50 - 00:10',\r\n                '12:50 - 00:10',\r\n            ],\r\n            location: 'https://www.google.com/maps/place/Caffe+bar+Dnevna+soba/@43.3196389,21.896984,15z/data=!4m5!3m4!1s0x0:0xf0256956dfa8b74d!8m2!3d43.3196389!4d21.896984?hl=sr',\r\n            menu: '',\r\n            address: 'Majakovskog bb 13/4',\r\n            phoneNumber: '(064) 776-332',\r\n            totalClaps: 156,\r\n            numberOfGrades: 38,\r\n            music: 'Pop',\r\n            volume: 2\r\n        }\r\n    },\r\n    {\r\n        id: 'ab12ba4',\r\n        title: 'Durango Caffe',\r\n        logo: '',\r\n        totalSpots: 90,\r\n        freeSpots: 10,\r\n        spotsUpdatedAt: 1589897781000,\r\n        reservations: [],\r\n        details: {\r\n            description: 'Jedini kafić u gradu gde možete maziti naše kućne ljubimce dok ispijate kafu sa svojim društvom',\r\n            images: '',\r\n            workingHours: [\r\n                '05:30 - 05:31',\r\n                '05:30 - 05:31',\r\n                '05:30 - 05:31',\r\n                '05:30 - 05:31',\r\n                '05:30 - 05:31',\r\n                '05:30 - 05:31',\r\n                '05:30 - 05:31',\r\n            ],\r\n            location: 'https://www.google.com/maps/place/%D0%A5%26%D0%9C/@43.3207141,21.8934617,17z/data=!3m1!4b1!4m5!3m4!1s0x4755b0b43dced8c7:0x9eb3a135c152d121!8m2!3d43.3207141!4d21.8956504?hl=sr',\r\n            menu: '',\r\n            address: 'Majakovskog bb 13/4',\r\n            phoneNumber: '(064) 776-332',\r\n            totalClaps: 190,\r\n            numberOfGrades: 38,\r\n            music: 'Pop',\r\n            volume: 2\r\n        }\r\n    },\r\n    {\r\n        id: 'ab12ba6',\r\n        title: 'Biro Kafeterija',\r\n        logo: 'biro.png',\r\n        totalSpots: 32,\r\n        freeSpots: 10,\r\n        spotsUpdatedAt: 1589897781000,\r\n        reservations: [],\r\n        details: {\r\n            description: 'Pazite se, mi volimo da vas slikamo noću!',\r\n            images: '',\r\n            workingHours: [\r\n                '09:30 - 04:50',\r\n                '09:30 - 04:50',\r\n                '09:30 - 04:50',\r\n                '09:30 - 04:50',\r\n                '09:30 - 04:50',\r\n                '09:30 - 04:50',\r\n                '09:30 - 04:50',\r\n            ],\r\n            location: 'https://www.google.com/maps/place/%D0%A5%26%D0%9C/@43.3207141,21.8934617,17z/data=!3m1!4b1!4m5!3m4!1s0x4755b0b43dced8c7:0x9eb3a135c152d121!8m2!3d43.3207141!4d21.8956504?hl=sr',\r\n            menu: '',\r\n            address: 'Centar grada',\r\n            phoneNumber: '(064) 776-332',\r\n            totalClaps: 563,\r\n            numberOfGrades: 194,\r\n            music: 'Pop',\r\n            volume: 3\r\n        }\r\n    },\r\n    {\r\n        id: 'ab12ba7',\r\n        title: 'Okrug caffe',\r\n        logo: 'okrug.jpg',\r\n        // preporuka: true,\r\n        totalSpots: 20,\r\n        freeSpots: 0,\r\n        spotsUpdatedAt: 1589897781000,\r\n        reservations: [],\r\n        details: {\r\n            description: 'Kod nas uvek možete da čitate knjige iz trilogija \"Gospodar prstenova\" i \"Hobiti\"',\r\n            images: '',\r\n            workingHours: [\r\n                '06:30 - 01:45',\r\n                '06:30 - 01:45',\r\n                '06:30 - 01:45',\r\n                '06:30 - 01:45',\r\n                '06:30 - 01:45',\r\n                '06:30 - 01:45',\r\n                '06:30 - 01:45',\r\n            ],\r\n            location: 'https://www.google.com/maps/place/%D0%A5%26%D0%9C/@43.3207141,21.8934617,17z/data=!3m1!4b1!4m5!3m4!1s0x4755b0b43dced8c7:0x9eb3a135c152d121!8m2!3d43.3207141!4d21.8956504?hl=sr',\r\n            menu: '',\r\n            address: 'Romanijska 17, Niš 18000',\r\n            phoneNumber: '(064) 776-332',\r\n            totalClaps: 287,\r\n            numberOfGrades: 62,\r\n            music: 'Pop',\r\n            volume: 1\r\n        }\r\n    },\r\n    {\r\n        id: 'ab12ba8',\r\n        title: 'Zrnce caffe',\r\n        logo: 'zrnce.png',\r\n        totalSpots: 58,\r\n        freeSpots: 10,\r\n        spotsUpdatedAt: 1589897781000,\r\n        reservations: [],\r\n        details: {\r\n            description: 'I ako smo zrnce mi nismo mali!',\r\n            images: '',\r\n            workingHours: [\r\n                '07:25 - 03:46',\r\n                '07:25 - 03:46',\r\n                '07:25 - 03:46',\r\n                '07:25 - 03:46',\r\n                '07:25 - 03:46',\r\n                '07:25 - 03:46',\r\n                '07:25 - 03:46',\r\n            ],\r\n            location: 'https://www.google.com/maps/place/%D0%A5%26%D0%9C/@43.3207141,21.8934617,17z/data=!3m1!4b1!4m5!3m4!1s0x4755b0b43dced8c7:0x9eb3a135c152d121!8m2!3d43.3207141!4d21.8956504?hl=sr',\r\n            menu: '',\r\n            address: 'Nepoznata address',\r\n            phoneNumber: '(064) 776-332',\r\n            totalClaps: 33,\r\n            numberOfGrades: 10,\r\n            music: 'Pop',\r\n            volume: 1\r\n        }\r\n    },\r\n    {\r\n        id: 'ab12ba9',\r\n        title: 'Sailor',\r\n        logo: 'sailor.png',\r\n        totalSpots: 30,\r\n        freeSpots: 10,\r\n        spotsUpdatedAt: 1589897781000,\r\n        reservations: [],\r\n        details: {\r\n            description: 'Plovimo na talasima vaše kafe',\r\n            images: '',\r\n            workingHours: [\r\n                '07:45 - 01:00',\r\n                '07:45 - 01:00',\r\n                '07:45 - 01:00',\r\n                '07:45 - 01:00',\r\n                '07:45 - 01:00',\r\n                '07:45 - 01:00',\r\n                '07:45 - 01:00',\r\n            ],\r\n            location: 'https://www.google.com/maps/place/%D0%A5%26%D0%9C/@43.3207141,21.8934617,17z/data=!3m1!4b1!4m5!3m4!1s0x4755b0b43dced8c7:0x9eb3a135c152d121!8m2!3d43.3207141!4d21.8956504?hl=sr',\r\n            menu: '',\r\n            address: 'Nepoznata adresa',\r\n            phoneNumber: '(064) 776-332',\r\n            totalClaps: 743,\r\n            numberOfGrades: 225,\r\n            music: 'Rock',\r\n            volume: 1\r\n        }\r\n    },\r\n    {\r\n        id: 'ab12ba5',\r\n        title: 'Caffe Zebrano',\r\n        logo: 'zebrano.png',\r\n        totalSpots: 45,\r\n        freeSpots: 0,\r\n        spotsUpdatedAt: 1589897781000,\r\n        reservations: [],\r\n        details: {\r\n            description: 'Mazimo zebre!',\r\n            images: '',\r\n            workingHours: [\r\n                '07:55 - 02:00',\r\n                '07:55 - 02:00',\r\n                '07:55 - 02:00',\r\n                '07:55 - 02:00',\r\n                '07:55 - 02:00',\r\n                '07:55 - 02:00',\r\n                '07:55 - 02:00',\r\n            ],\r\n            location: 'https://www.google.com/maps/place/%D0%A5%26%D0%9C/@43.3207141,21.8934617,17z/data=!3m1!4b1!4m5!3m4!1s0x4755b0b43dced8c7:0x9eb3a135c152d121!8m2!3d43.3207141!4d21.8956504?hl=sr',\r\n            menu: '',\r\n            address: 'Troška',\r\n            phoneNumber: '(064) 776-332',\r\n            totalClaps: 1892,\r\n            numberOfGrades: 712,\r\n            music: 'Punk',\r\n            volume: 2\r\n        }\r\n    }\r\n]\r\n\r\nexport default kafici;\r\n","import React, {\r\n    useEffect,\r\n    useState\r\n} from 'react';\r\n\r\n/* Components */\r\nimport { Modal } from 'react-bootstrap';\r\n\r\n/* Logo */\r\nimport Img from '../CustomIcons/workInProgress.png';\r\n\r\nconst ComingSoonModal = ({ show, onHide }) => {\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Body>\r\n                <div className=\"reserveModalContainer\">\r\n                    <img src={Img} style={{width: '125px'}} />\r\n                    <h6 className=\"boldText\">Naš tim aktivno radi na ovoj funkciji</h6>\r\n                    <p style={{marginBottom: '0px'}}>Biće dostupna u nekom od narednih ažuriranja.</p>\r\n                    <p>Hvala na strpljenju!</p>\r\n                    <button\r\n                        className=\"detailsRow clickableRow w-50\"\r\n                        onClick={() => {\r\n                            onHide();\r\n                        }}\r\n                    >\r\n                        <h1 className=\"detailRowText boldText\">OK</h1>\r\n                    </button>\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ComingSoonModal;","import moment from 'moment';\r\n\r\n// const isOpen = (workingHours) => {\r\n//     // Kafići ne smeju da se zatvaraju od lowerLimita što je 05:00 do početka radnog vremena u toku dana\r\n//     // Da bi ovaj algoritam funkcionisao\r\n\r\n//     let time = workingHours,\r\n//         timeStart = time.split(' - ')[0],\r\n//         timeEnd = time.split(' - ')[1],\r\n//         currentTime = moment(),\r\n//         flag = false,\r\n//         sFlag = false,\r\n//         lowerLimit = '05:00'; //@todo Ovo treba da se istraži koliko da bude na kraju\r\n\r\n//     if (currentTime.isBetween(moment('00:00', 'HH:mm'), moment(lowerLimit, 'HH:mm'))) {\r\n//         sFlag = true; //Ovo je flag koji kaže da li je trenutno vreme prešlo 00:00\r\n//     };\r\n\r\n//     if (moment(timeEnd, 'HH:mm').isBetween(moment('00:00', 'HH:mm'), moment(lowerLimit, 'HH:mm'))) {\r\n//         flag = true; //Ovo je flag koji kaže da li je vreme zatvaranja kafića između 00:00 i lowerlimita\r\n//     };\r\n\r\n//     if (currentTime.isBetween(moment(timeStart, 'HH:mm').subtract(sFlag ? 1 : 0, 'days'), moment(timeEnd, 'HH:mm').add(!sFlag && flag ? 1 : 0, 'days').subtract(sFlag && !flag ? 1 : 0, 'days'))) {\r\n\r\n//         // Postoje sledeći slučajevi:\r\n//         //     Ako nije prošlo 00:00\r\n//         //         Vreme početka ne diramo\r\n//         //         Ako je vreme završetka pre 00:00\r\n//         //             Vreme završetka ne diramo\r\n//         //         Ako je vreme završetka posle 00:00\r\n//         //             Vremenu završetka dodajemo 1 dan\r\n//         //     Ako je prošlo 00:00\r\n//         //         Vremenu početka oduzimamo 1 dan\r\n//         //         Ako je vreme završetka pre 00:00\r\n//         //             Vremenu završetka oduzimamo 1 dan\r\n//         //         Ako je vreme završetka posle 00:00 pa do lowerLimita(05:00)\r\n//         //             Vreme završetka ne diramo\r\n\r\n//         //     lowerLimit je vreme pre koga ne sme početi radno vreme a posle koga se ono ne sme završiti\r\n\r\n//         return true;\r\n//     };\r\n\r\n\r\n//     return false;\r\n// }\r\n\r\nfunction isOpen(workingHours, day = moment()) {\r\n\r\n    /*@todo Pošto sada imamo array treba da se sredi da posle 00:00 gleda closing time od prethodnog dana */\r\n\r\n\r\n    let [openingTime, closingTime] = workingHours.split(\" - \");\r\n\r\n    function getMomentForTime(time, day) {\r\n        const [hours, minutes] = time.split(\":\");\r\n        return moment(day).set({ hours, minutes, seconds: 0, millisecond: 0 });\r\n    }\r\n\r\n    let opening = getMomentForTime(openingTime, day);\r\n    let closing = getMomentForTime(closingTime, day);\r\n\r\n    //! Ako je isti openign i closing, odna je 24h open, treba handluejs i ovaj case.\r\n    if (closing.isSame(opening)) {\r\n        // return \"24/7\";\r\n        return true;\r\n    }\r\n\r\n    //! Ako je trenutno vreme prešlo 00:00, vreme zatvaranja je pre otvoranja i trenutno vreme je pre vremena zatvaranja\r\n    if (closing.isBefore(opening) && moment(day).isBefore(closing)) {\r\n        return true;\r\n    }\r\n\r\n    //! Ako prodje 00:00, to znaci da prebacimo u sledeci dan.\r\n    if (closing.isBefore(opening)) {\r\n        closing = moment(closing).add({ days: 1 });\r\n    }\r\n\r\n    // Da li je trenutno vreme izmedju dva momenta.\r\n    return moment(day).isBetween(opening, closing, null, \"()\");\r\n}\r\n\r\nconst roundToPrecision = (x, precision) => {\r\n    var y = +x + (precision === undefined ? 0.5 : precision / 2);\r\n    return y - (y % (precision === undefined ? 1 : +precision));\r\n}\r\n\r\nexport {\r\n    isOpen,\r\n    roundToPrecision\r\n}","import React, {\r\n    useEffect,\r\n    useContext,\r\n    useState\r\n} from 'react';\r\n\r\n/* Data */\r\nimport kafici from '../data/kafici';\r\nimport UserMock from '../data/user';\r\n\r\n/* Components */\r\nimport ComingSoonModal from '../Components/ComingSoonModal';\r\n\r\n/* Packages & libraries */\r\nimport _ from 'lodash';\r\nimport { isOpen } from '../library/common';\r\n\r\n/* Router */\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n/* LOADER */\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from 'react-loader-spinner';\r\nimport moment from 'moment';\r\n\r\n\r\nlet DataContext;\r\n\r\nconst { Provider, Consumer } = DataContext = React.createContext({});\r\n\r\nconst DataProvider = (props) => {\r\n    // let { id } = useParams();\r\n    // User\r\n    const [User, setUser] = useState(\r\n        {\r\n            ...JSON.parse(localStorage.getItem('User'))\r\n        }\r\n    );\r\n    // Original data\r\n    const [Data, setData] = useState([]);\r\n    // Filtered\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [filters, setFilters] = useState([]);\r\n    // Sorted\r\n    const [sortedOpen, setSortedOpen] = useState([]);\r\n    const [sortedClosed, setSortedClosed] = useState([]);\r\n    // Current page/data\r\n    const [currentData, setCurrentData] = useState({});\r\n    // Coming soon modal\r\n    const [showComingSoonModal, setShowComingSoonModal] = useState(false);\r\n    // Timer za rezervaciju\r\n    const [timer, setTimer] = useState(null);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    // const [authorized, setAuthorized] = useState(false);\r\n\r\n    /* const updateFromServer = () => {\r\n        return fetch(\"/update/all\")\r\n            .then(({ data }) => {\r\n                setLoading(false)\r\n                return setData([...data]);\r\n            })\r\n            .catch(({ message }) => {\r\n                return toast.error(message);\r\n            });\r\n    } */\r\n\r\n    const updateWithMockData = () => {\r\n        let authorized = isAuthorized(),\r\n            timeout;\r\n\r\n        if (authorized && User && User.ID) {\r\n            fetch('http://durango.devffwd.nl:3000/api/places')\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    const { data } = response;\r\n                    console.log(data)\r\n                    if (!data || !data.length) {\r\n                        console.log('nešto ga nema data');\r\n                        setData(kafici);\r\n                    } else {\r\n                        //Doing this just to show loader for a little bit :)\r\n                        // setTimeout(() => {\r\n                        //     setData(data);\r\n                        // }, 1500)\r\n                        setData(data);\r\n                        setLoading(false);\r\n                    }\r\n                }).catch(({ message }) => {\r\n                    // Za sada ako bude greška postavi mockData\r\n                    setData(kafici);\r\n                    console.log('error', message);\r\n                });\r\n        } else {\r\n            props.history.push('/durango/app-login');\r\n        };\r\n\r\n\r\n        /* if (authorized && User && User.ID) {\r\n            timeout = setTimeout(() => {\r\n                setData(kafici);\r\n                setLoading(false);\r\n            }, 1200)\r\n        } else {\r\n            props.history.push('/durango/app-login');\r\n        } */\r\n\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateWithMockData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // updateFromServer();\r\n        // updateWithMockData(); OVO NE DIRAJ\r\n        /* Experiment @todo */\r\n\r\n        if (!User) {\r\n            return;\r\n        }\r\n\r\n        function compareKeys(a, b) {\r\n            var aKeys = Object.keys(a).sort();\r\n            var bKeys = Object.keys(b).sort();\r\n            return JSON.stringify(aKeys) === JSON.stringify(bKeys);\r\n        }\r\n\r\n        if (!compareKeys(User, UserMock)) {\r\n            // localStorage.removeItem('User');\r\n            setUser({\r\n                ...UserMock,\r\n                ...User\r\n            })\r\n            return;\r\n        }\r\n\r\n        localStorage.setItem('User', JSON.stringify(User));\r\n    }, [User]);\r\n\r\n    useEffect(() => {\r\n        filterBySearch(search);\r\n\r\n        if (filters.indexOf('omiljeni') !== -1) {\r\n            filterByOmiljeni();\r\n        }\r\n\r\n    }, [search, Data, filters]);\r\n\r\n    useEffect(() => {\r\n        let day = moment().isoWeekday() - 1;\r\n        setSortedOpen(\r\n            [\r\n                ...filteredData.filter(\r\n                    item => isOpen(item.details.workingHours[day])\r\n                )\r\n            ]\r\n        );\r\n        setSortedClosed(\r\n            [\r\n                ...filteredData.filter(\r\n                    item => !isOpen(item.details.workingHours[day])\r\n                )\r\n            ]\r\n        );\r\n    }, [filteredData]);\r\n\r\n    useEffect(() => {\r\n        let int = null;\r\n\r\n        int = setInterval(() => {\r\n            setData(simulateUpdateData());\r\n        }, 900)\r\n\r\n        return () => {\r\n            clearInterval(int);\r\n        }\r\n    }, [Data]);\r\n\r\n    useEffect(() => {\r\n        let int;\r\n\r\n        if (timer === 900) {\r\n            int = setInterval(() => {\r\n                setTimer(timer - 1);\r\n            }, 1000);\r\n        } else if (timer === 0) {\r\n            clearInterval(int);\r\n        }\r\n\r\n        // console.log(timer)\r\n\r\n        return () => {\r\n            clearInterval(int);\r\n        }\r\n    }, [timer]);\r\n\r\n    const simulateUpdateData = () => {\r\n        let IDs = _.map(Data, 'id'),\r\n            randomIDs = _.slice(_.shuffle(IDs), 0, 5),\r\n            day = moment().isoWeekday() - 1;;\r\n\r\n        return [...Data].map(item => {\r\n            if (_.includes(randomIDs, item.id) && isOpen(item.details.workingHours[day])) {\r\n                return {\r\n                    ...item,\r\n                    freeSpots: getNewNumber(item.freeSpots),\r\n                    spotsUpdatedAt: moment().valueOf(),\r\n                    details: {\r\n                        ...item.details,\r\n                        volume: _.random(1, 3)\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...item\r\n            }\r\n        })\r\n    }\r\n\r\n    const getNewNumber = (old) => {\r\n        let bulk = Math.floor(Math.random() * 4);\r\n        return Math.floor(Math.random() * 10) > 5 || old < 3\r\n            ? old > 10\r\n                ? old - bulk\r\n                : old + bulk\r\n            : old - bulk;\r\n    }\r\n\r\n    const isAuthorized = () => {\r\n        let User = JSON.parse(localStorage.getItem('User'));\r\n\r\n        if (User && User.ID) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    const filterBySearch = (search = '') => {\r\n        let filtered = Data.filter(({ title }) => {\r\n            return title.trim().toLowerCase().indexOf(search.trim().toLowerCase()) > -1;\r\n        });\r\n\r\n        setFilteredData(_.orderBy(filtered, 'freeSpots', 'desc'));\r\n    };\r\n\r\n    const filterByOmiljeni = () => {\r\n        let filtered = Data.filter(({ id }) => User.Favourites.indexOf(id) !== -1);\r\n\r\n        setFilteredData(_.orderBy(filtered, 'freeSpots', 'desc'));\r\n    };\r\n\r\n    const toggleFavourite = (fav) => {\r\n        let nextState = { ...User };\r\n\r\n        if (nextState.Favourites.indexOf(fav) === -1) {\r\n            nextState = {\r\n                ...User,\r\n                Favourites: [\r\n                    ...nextState.Favourites,\r\n                    fav\r\n                ]\r\n            }\r\n        } else {\r\n            nextState.Favourites = nextState.Favourites.filter(f => f !== fav);\r\n        }\r\n\r\n        return setUser(nextState);\r\n    }\r\n\r\n    const fastReserve = (ID, Time) => {\r\n        let nextState = { ...User };\r\n\r\n        // console.log(ID, Time);\r\n\r\n        if (nextState.Reservation.ID) {\r\n            //@todo provera\r\n        }\r\n\r\n        nextState = {\r\n            ...User,\r\n            Reservation: {\r\n                ID,\r\n                Time\r\n            }\r\n        }\r\n\r\n        // setTimer(900);\r\n\r\n        return setUser(nextState);\r\n    }\r\n\r\n    const changeData = ({ id, ...restOfData }) => {\r\n        let nextState = [...Data];\r\n\r\n        if (!!_.find(Data, { id })) {\r\n            nextState = Data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { id, ...restOfData };\r\n                }\r\n\r\n                return item;\r\n            });\r\n        } else {\r\n            nextState = [{ id, ...restOfData }, ...nextState];\r\n        }\r\n\r\n        return setData(nextState);\r\n    }\r\n\r\n    const changeClaps = ({ ID, userAplauza }) => {\r\n        let nextState = {\r\n            ...User,\r\n            Claps: [\r\n                ...User.Claps,\r\n                {\r\n                    ID,\r\n                    userAplauza\r\n                }\r\n            ]\r\n        }\r\n\r\n        return setUser(nextState);\r\n    }\r\n\r\n    const changeSearch = (value) => {\r\n        setSearch(value);\r\n    }\r\n\r\n    const toggleFilters = (value) => {\r\n        let nextFilters = [...filters];\r\n\r\n        if (nextFilters.indexOf(value) === -1) {\r\n            nextFilters.push(value);\r\n        } else {\r\n            nextFilters = nextFilters.filter(f => f !== value);\r\n        }\r\n\r\n        return setFilters(nextFilters);\r\n    }\r\n\r\n    return (\r\n        <Provider\r\n            value={{\r\n                User,\r\n                changeClaps,\r\n                toggleFavourite,\r\n                Data,\r\n                filteredData,\r\n                sortedOpen,\r\n                sortedClosed,\r\n                search,\r\n                changeSearch,\r\n                changeData,\r\n                loading,\r\n                filterBySearch,\r\n                filters,\r\n                toggleFilters,\r\n                currentData,\r\n                setCurrentData,\r\n                fastReserve,\r\n                // setTimer,\r\n                timer,\r\n                setShowComingSoonModal\r\n            }}\r\n        >\r\n            {props.children}\r\n            <LoaderComponent />\r\n            <ComingSoonModal show={showComingSoonModal} onHide={() => { setShowComingSoonModal(false); }} />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nconst DataConsumer = (props) => {\r\n    return (\r\n        <Consumer>\r\n            {context => {\r\n                if (!context) {\r\n                    throw new Error('Using DataConsumer outside of DataProvider');\r\n                }\r\n\r\n                return props.children(context);\r\n            }}\r\n        </Consumer>\r\n    )\r\n}\r\n\r\nconst LoaderComponent = () => {\r\n    const { loading } = useContext(DataContext);\r\n\r\n    return <div className=\"loader\">\r\n        <Loader\r\n            type=\"Grid\"\r\n            color=\"#3185FC\"\r\n            height={100}\r\n            width={100}\r\n            visible={loading}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport {\r\n    DataProvider,\r\n    DataConsumer\r\n};\r\n\r\nexport default DataContext;","/* React */\r\nimport React, {\r\n    useState,\r\n    useEffect,\r\n    Fragment,\r\n    useContext\r\n} from 'react';\r\n\r\n/* Data */\r\nimport Logo from '../ExtendedLogo/Logo.png';\r\nimport noResultsIcon from '../CustomIcons/noResults.png';\r\nimport noFavoritesIcon from '../CustomIcons/noFavorites.png';\r\nimport defaultLogo from '../CustomIcons/defaultLogo.png';\r\n\r\n/* Libraries */\r\nimport _ from 'lodash';\r\nimport queryString from 'query-string';\r\nimport moment from 'moment';\r\n\r\n/* Animations */\r\nimport Fade from 'react-reveal/Fade';\r\nimport Spin from 'react-reveal/Spin';\r\nimport FlipMove from 'react-flip-move';\r\n\r\n/* Icons */\r\nimport Star from '../icons/star.svg';\r\nimport Seat from '../icons/seat.svg';\r\nimport SeatGray from '../icons/seat_gray.svg';\r\nimport SeatOrange from '../icons/seat_orange.svg';\r\nimport GearBlue from '../icons/gearBlue.svg';\r\nimport watchBlue from '../icons/watchBlue.svg';\r\n\r\n/* Components & LOADER */\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport AbsoluteWrapper from '../Components/AbsoluteWrapper';\r\n\r\n/* Context */\r\nimport DataContext, { DataProvider } from '../Context/dataContext';\r\n\r\nconst Search = () => {\r\n    const { search, changeSearch } = useContext(DataContext);\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <i className=\"material-icons-outlined searchIcon\">\r\n                search\r\n            </i>\r\n            <input\r\n                className=\"searchInput\"\r\n                placeholder=\"Pretraži...\"\r\n                value={search}\r\n                onChange={(e) => {\r\n                    changeSearch(e.target.value);\r\n                }}\r\n            />\r\n            {\r\n                search && <i\r\n                    className=\"material-icons-outlined resetSearchIcon\"\r\n                    onClick={() => {\r\n                        changeSearch('');\r\n                    }}\r\n                >\r\n                    close\r\n                </i>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst getTrimmedTitle = (title, n) => {\r\n    if (title.length > n) {\r\n        return title.slice(0, n) + '...';\r\n    }\r\n\r\n    return title;\r\n}\r\n\r\nconst Separator = () => {\r\n    return (\r\n        <div className=\"listSeparator\">Zatvoreni</div>\r\n    )\r\n}\r\n\r\nconst LabelBadge = ({ label = 'ZATVORENO', color = '#596164', Reservation, object }) => {\r\n    const { User } = useContext(DataContext);\r\n\r\n    const [timer, setTimer] = useState('');\r\n\r\n    const isReserved = (obj) => {\r\n        if (!User.Reservation || !obj) {\r\n            return false;\r\n        }\r\n\r\n        // Is current time behind Reserved Time\r\n        let flag = moment(User.Reservation.Time, 'HH:mm').isAfter();\r\n\r\n        if (flag && User.Reservation.ID === obj.id) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n\r\n        const updateTimer = () => {\r\n            setTimer(\r\n                moment.utc(moment(Reservation.Time, 'HH:mm').diff(moment(), 'seconds') * 1000).format('mm:ss')\r\n            );\r\n        }\r\n\r\n        if (isReserved(object)) {\r\n            updateTimer();\r\n            interval = setInterval(() => {\r\n                updateTimer();\r\n                if (!isReserved(object)) {\r\n                    // Timer is over!\r\n                    // Do something\r\n                    // And clearInterval\r\n                    clearInterval(interval);\r\n                }\r\n            }, 1000);\r\n        }\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            className=\"listBadge\"\r\n            style={\r\n                {\r\n                    backgroundColor: color,\r\n                    // backgroundImage: color,\r\n                    // color:\r\n                }\r\n            }\r\n        >\r\n            {\r\n                label === 'REZERVISANO' ? label + ' | ' + timer : label\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FavoritBadge = ({ color = '#596164' }) => {\r\n    return (\r\n        <div\r\n            className=\"favoritBadgeContainer\"\r\n            style={\r\n                {\r\n                    backgroundColor: color\r\n                }\r\n            }\r\n        >\r\n            {/* <i\r\n                className=\"material-icons-outlined favoritBadge\"\r\n                style={{\r\n                    fontSize: '18px'\r\n                }}\r\n            >\r\n                star\r\n            </i> */}\r\n\r\n            <img src={Star} className=\"svgIconSmallest favoritBadge\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst UpdatedBadge = ({ color = 'white', object }) => {\r\n    // moment().locale('sr'); @todo\r\n\r\n    const [label, setLabel] = useState(moment(object.spotsUpdatedAt).fromNow());\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n\r\n        const updateLabel = () => {\r\n            setLabel(moment(object.spotsUpdatedAt).fromNow());\r\n        }\r\n\r\n        updateLabel();\r\n        interval = setInterval(() => {\r\n            updateLabel();\r\n            // clearInterval(interval);\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [object.spotsUpdatedAt]);\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"updatedBadge\"\r\n            style={\r\n                {\r\n                    color,\r\n                    background: object.freeSpots === 0\r\n                        ? 'linear-gradient(to top right, #f83600 0%, #f9d423 100%)'\r\n                        : 'linear-gradient(to top right, #00c6fb 0%, #005bea 100%)'\r\n                }\r\n            }\r\n        >\r\n            <p>{label}</p>\r\n            {/* <img src={watchBlue} className=\"svgIconSmallest updatedBadgeIcon\" /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst List = ({ history }) => {\r\n    const { filteredData, sortedOpen, sortedClosed, loading, User, filters } = useContext(DataContext);\r\n\r\n    const isReserved = (obj) => {\r\n        if (!User.Reservation) {\r\n            return false;\r\n        }\r\n\r\n        // Is current time behind Reserved Time\r\n        let flag = moment(User.Reservation.Time, 'HH:mm').isAfter();\r\n\r\n        if (flag && User.Reservation.ID === obj.id) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    if (!(Array.isArray(filteredData) && filteredData.length)) {\r\n        if (loading) return null;\r\n\r\n        if (filters.indexOf('omiljeni') !== -1) {\r\n            return (\r\n                <div className=\"noResults boldText\">\r\n                    <h1>\r\n                        Objekte koje označite zvezdicom pojaviće se ovde kao omiljeni\r\n                    </h1>\r\n                    <img className=\"noResultsIcon\" src={noFavoritesIcon} />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"noResults boldText\">\r\n                <h1>\r\n                    Mesto koje tražite nije pronađeno\r\n                </h1>\r\n                <img className=\"noResultsIcon\" src={noResultsIcon} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <Fragment>\r\n        <FlipMove\r\n            duration={300}\r\n            easing=\"ease-out\"\r\n            appearAnimation=\"none\"\r\n            enterAnimation=\"none\"\r\n            leaveAnimation=\"none\"\r\n            staggerDurationBy={100}\r\n        // verticalAlignment=\"bottom\"\r\n        // maintainContainerHeight=\"true\"\r\n        >\r\n            {\r\n                sortedOpen.map(Kafic => {\r\n                    return (\r\n                        <div\r\n                            key={Kafic.id}\r\n                            className={`button ${isReserved(Kafic) ? 'reservedObject' : \"normalObject\"} ${Kafic.preporuka ? 'preporukaObject' : \"\"}`}\r\n                            onClick={() => {\r\n                                history.push(`/durango/app/${Kafic.id}`);\r\n                            }}\r\n                        >\r\n                            <Fade\r\n                                key={Kafic.id}\r\n                                duration={300}\r\n                                bottom\r\n                                opposite\r\n                                cascade\r\n                            >\r\n                                <div className=\"singleLine\">\r\n                                    <img\r\n                                        className=\"listLogo\"\r\n                                        src={\r\n                                            Kafic.logo\r\n                                                ? `${process.env.PUBLIC_URL}/slike/mockLogos/${Kafic.logo}`\r\n                                                : defaultLogo\r\n                                        }\r\n                                    />\r\n                                    <h1 className=\"linetitle \">{getTrimmedTitle(Kafic.title, 15)}</h1>\r\n                                    <p className=\"lineFreeSeats boldText greyText\">\r\n                                        {\r\n                                            Kafic.freeSpots >= 10\r\n                                                ? '10+'\r\n                                                : Kafic.freeSpots\r\n                                        }\r\n                                    </p>\r\n                                    <i\r\n                                        className=\"material-icons-outlined peopleIcon\"\r\n                                    >\r\n                                        <img\r\n                                            src={\r\n                                                Kafic.freeSpots > 0\r\n                                                    ? Seat\r\n                                                    : SeatOrange\r\n                                            }\r\n                                            className=\"svgIcon\"\r\n                                        />\r\n                                    </i>\r\n                                    {\r\n                                        isReserved(Kafic) && <LabelBadge\r\n                                            label=\"REZERVISANO\"\r\n                                            color=\"#005bea\"\r\n                                            Reservation={User.Reservation}\r\n                                            object={Kafic}\r\n                                        />\r\n                                    }\r\n                                </div>\r\n                            </Fade>\r\n                            {\r\n                                User.Favourites.indexOf(Kafic.id) !== -1 && <FavoritBadge color=\"#005bea\" />\r\n                            }\r\n                            {\r\n                                Kafic.spotsUpdatedAt && <UpdatedBadge\r\n                                    color=\"white\"\r\n                                    object={Kafic}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </FlipMove>\r\n        {sortedClosed.length > 0 && <Separator />}\r\n        <FlipMove\r\n            duration={300}\r\n            easing=\"ease-out\"\r\n            appearAnimation=\"none\"\r\n            enterAnimation=\"none\"\r\n            leaveAnimation=\"none\"\r\n            staggerDurationBy={100}\r\n        // verticalAlignment=\"bottom\"\r\n        // maintainContainerHeight=\"true\"\r\n        >\r\n            {\r\n                sortedClosed.map(Kafic => {\r\n                    return <div\r\n                        key={Kafic.id}\r\n                        className=\"closedObject button\"\r\n                        onClick={() => {\r\n                            history.push(`/durango/app/${Kafic.id}`);\r\n                        }}\r\n                    >\r\n                        <div className=\"singleLine\">\r\n                            <img\r\n                                className=\"listLogo\"\r\n                                src={\r\n                                    Kafic.logo\r\n                                        ? `${process.env.PUBLIC_URL}/slike/mockLogos/${Kafic.logo}`\r\n                                        : defaultLogo\r\n                                }\r\n                            />\r\n                            <h1 className=\"linetitle\">{getTrimmedTitle(Kafic.title, 15)}</h1>\r\n                            <p className=\"lineFreeSeats boldText greyText\">\r\n                                {\r\n                                    Kafic.freeSpots >= 10\r\n                                        ? '10+'\r\n                                        : Kafic.freeSpots\r\n                                }\r\n                            </p>\r\n                            <i\r\n                                className=\"material-icons-outlined peopleIcon\"\r\n                                style={{\r\n                                    color: '#B0B0B0'\r\n                                }}\r\n                            >\r\n                                {/* people */}\r\n                                {/* event_seat */}\r\n                                <img src={SeatGray} className=\"svgIcon\" />\r\n                            </i>\r\n                            <LabelBadge />\r\n                        </div>\r\n                        {\r\n                            User.Favourites.indexOf(Kafic.id) !== -1 && <FavoritBadge />\r\n                        }\r\n                    </div>\r\n                })\r\n            }\r\n        </FlipMove>\r\n    </Fragment>\r\n}\r\n\r\nconst ListAndSearch = ({ history }) => {\r\n    const { toggleFilters, changeSearch, loading, filters, User } = useContext(DataContext);\r\n\r\n    const isTurnedOn = () => {\r\n        return filters.indexOf('omiljeni') !== -1\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"mainHeader\">\r\n                <img src={Logo} className=\"logoHeader\" />\r\n                <div\r\n                    className=\"avatarContainer\"\r\n                    onClick={() => { history.push('/durango/app/settings') }}\r\n                >\r\n                    <img src={User.imageUrl} className=\"avatar\" />\r\n                    <Spin duration={500}>\r\n                        <img src={GearBlue} className=\"avatarGears\" />\r\n                    </Spin>\r\n                </div>\r\n                <Search />\r\n            </div>\r\n            {\r\n                !loading && <div className=\"filtersContainer\">\r\n                    <div className=\"filterChipContainer\">\r\n                        <div\r\n                            className={`filterChip ${isTurnedOn() ? 'filterChipActive' : ''}`}\r\n                            onClick={() => {\r\n                                toggleFilters('omiljeni');\r\n                                changeSearch('');\r\n                            }}\r\n                        >\r\n                            {\r\n                                isTurnedOn()\r\n                                    ? 'Prikaži sve'\r\n                                    : 'Prikaži omiljene'\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className=\"listHolder\">\r\n                <List history={history} />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst MainScreen = ({ history }) => {\r\n    return (\r\n        <div className=\"list\">\r\n            <ListAndSearch history={history} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Home = props => {\r\n    return (\r\n        // <div className=\"container\">\r\n        <div className=\"App\">\r\n            <MainScreen history={props.history} />\r\n        </div>\r\n        // </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, {\r\n    useEffect,\r\n    useState\r\n} from 'react';\r\n\r\n/* Logo */\r\nimport Logo from '../ExtendedLogo/Logo.png';\r\n\r\n/* Icons */\r\nimport BackArrow from '../icons/backArrow.svg';\r\n\r\n/* Animations */\r\nimport RubberBand from 'react-reveal/RubberBand';\r\n\r\nconst DetailsHeader = (props) => {\r\n    const [isSticky, setSticky] = useState(false);\r\n\r\n    const handleScroll = () => {\r\n        setSticky(window.pageYOffset !== 0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        //@todo animate on scroll\r\n        /* window.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        }; */\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`detailsHeader ${isSticky ? ' stickyDetailsHeader' : ''}`}>\r\n            <div\r\n                className=\"goBack\"\r\n                onClick={() => {\r\n                    props.history.push(props.back);\r\n                }}\r\n            >\r\n                {/* <i className=\"material-icons\">\r\n                    arrow_back_ios\r\n                </i> */}\r\n                <img src={BackArrow} className=\"svgIconBigger\" />\r\n            </div>\r\n            <img src={Logo} className={`detailsDurangoLogo ${isSticky ? ' stickyDurangoLogo' : ''}`} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailsHeader;","/* React */\r\nimport React, {\r\n    useEffect,\r\n    useState,\r\n    useContext,\r\n    Fragment\r\n} from 'react';\r\n\r\n/* Libraries */\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n/* Animations */\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport Roll from 'react-reveal/Roll';\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\n/* Icons */\r\nimport Plus from '../icons/plus.svg';\r\nimport Minus from '../icons/minus.svg';\r\nimport Done from '../icons/doneWhite.svg';\r\nimport Clear from '../icons/clearWhite.svg';\r\n\r\n/* Components */\r\nimport DetailsHeader from '../Components/DetailsHeader';\r\nimport DatePicker from 'react-date-picker';\r\nimport TimePicker from 'react-time-picker'\r\nimport { Image } from 'react-bootstrap';\r\n\r\n/* Context */\r\nimport DataContext, { DataProvider } from '../Context/dataContext';\r\n\r\nfunction Settings(props) {\r\n    const { User, loading, setShowComingSoonModal } = useContext(DataContext);\r\n\r\n    const restOfPage = () => {\r\n        return (\r\n            <Fragment>\r\n                <DetailsHeader history={props.history} back={'/durango/app/home'} />\r\n                <div\r\n                    className=\"page\"\r\n                    style={{\r\n                        marginTop: '20px'\r\n                    }}\r\n                >\r\n                    <div className=\"detailsSubheader\">\r\n                        <div>\r\n                            <Zoom\r\n                                cascade\r\n                                duration={500}\r\n                            >\r\n                                <h1 className=\"settingsTitle\">{User.Name}</h1>\r\n                            </Zoom>\r\n                            <p className=\"settingsEmailParagraph\">\r\n                                <span className=\"greyText\">{'Email: '}</span>\r\n                                <span>{User.Email}</span>\r\n                            </p>\r\n                        </div>\r\n                        <Roll\r\n                            right\r\n                            duration={500}\r\n                        >\r\n                            <div>\r\n                                <img\r\n                                    src={User.imageUrl}\r\n                                    className={\r\n                                        `detailsLogo settingsProfileImage`\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </Roll>\r\n                    </div>\r\n                    <div\r\n                        className=\"detailsRow clickableRow\"\r\n                        onClick={() => {\r\n                            setShowComingSoonModal(true);\r\n                        }}\r\n                    >\r\n                        <h1 className=\"detailRowText boldText\">\r\n                            Notifikacije\r\n                        </h1>\r\n                        <img\r\n                            src={Done}\r\n                            className=\"svgIconSmaller\"\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        className=\"detailsRow clickableRow\"\r\n                        onClick={() => {\r\n                            setShowComingSoonModal(true);\r\n                        }}\r\n                    >\r\n                        <h1 className=\"detailRowText boldText\">\r\n                            Upravljaj omiljenima\r\n                        </h1>\r\n                        <img\r\n                            src={Done}\r\n                            className=\"svgIconSmaller\"\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        className=\"detailsRow clickableRow\"\r\n                        onClick={() => {\r\n                            setShowComingSoonModal(true);\r\n                        }}\r\n                    >\r\n                        <h1 className=\"detailRowText boldText\">\r\n                            Pridruži svoj objekat\r\n                        </h1>\r\n                        <img\r\n                            src={Plus}\r\n                            className=\"svgIconSmaller\"\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        className=\"detailsRow clickableRow\"\r\n                        onClick={() => {\r\n                            setShowComingSoonModal(true);\r\n                        }}\r\n                    >\r\n                        <h1 className=\"detailRowText boldText\">\r\n                            Privacy policy\r\n                        </h1>\r\n                        <img\r\n                            src={Plus}\r\n                            className=\"svgIconSmaller\"\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        className=\"detailsRow clickableRow\"\r\n                        onClick={() => {\r\n                            localStorage.removeItem('User');\r\n                            props.history.push(\"/durango/app-login\");\r\n                        }}\r\n                    >\r\n                        <h1 className=\"detailRowText boldText\">\r\n                            Izloguj se\r\n                        </h1>\r\n                        <img\r\n                            src={Clear}\r\n                            className=\"svgIconSmaller\"\r\n                        />\r\n                    </div>\r\n                    <Image className=\"settingsFFWDLogo\" src=\"https://futureforward.nl/resources/themes/app/images/futureforward-logo.svg\" fluid />\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        !loading && restOfPage()\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","import React, {\r\n    useEffect,\r\n    useContext,\r\n    useState\r\n} from 'react';\r\n\r\n/* Data */\r\nimport kafici from '../data/kafici';\r\n\r\n/* Packages & libraries */\r\nimport _ from 'lodash';\r\nimport { isOpen } from '../library/common';\r\n\r\n/* Router */\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n/* LOADER */\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from 'react-loader-spinner';\r\nimport moment from 'moment';\r\n\r\n\r\nlet ObjectContext;\r\n\r\nconst { Provider, Consumer } = ObjectContext = React.createContext({});\r\n\r\nconst ObjectProvider = (props) => {\r\n\r\n    const [Data, setData] = useState();\r\n    const [ID, setID] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setData([...kafici]);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let findData = {};\r\n        if (ID) {\r\n            findData = { ..._.find(Data, { 'id': parseInt(ID, 10) }) };\r\n        }\r\n\r\n        if (findData.id) {\r\n            props.history.push('/durango/inputPanel/' + ID);\r\n        }\r\n    }, [ID]);\r\n\r\n    return (\r\n        <Provider\r\n            value={{\r\n                ID,\r\n                setID,\r\n                loading,\r\n                Data,\r\n            }}\r\n        >\r\n            {props.children}\r\n            <LoaderComponent />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nconst ObjectConsumer = (props) => {\r\n    return (\r\n        <Consumer>\r\n            {context => {\r\n                if (!context) {\r\n                    throw new Error('Using ObjectConsumer outside of ObjectProvider');\r\n                }\r\n\r\n                return props.children(context);\r\n            }}\r\n        </Consumer>\r\n    )\r\n}\r\n\r\nconst LoaderComponent = () => {\r\n    const { loading } = useContext(ObjectContext);\r\n\r\n    return <div className=\"loader\">\r\n        <Loader\r\n            type=\"Grid\"\r\n            color=\"#3185FC\"\r\n            height={100}\r\n            width={100}\r\n            visible={loading}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport {\r\n    ObjectProvider,\r\n    ObjectConsumer\r\n};\r\n\r\nexport default ObjectContext;","import React, { useEffect, useState, useContext } from 'react';\r\n\r\n/* Libraries */\r\nimport moment from 'moment';\r\nimport _ from 'lodash';\r\nimport { isOpen } from '../../library/common';\r\nimport Particles from 'react-particles-js';\r\n\r\n/* Router */\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n/* Default Logo */\r\nimport defaultLogo from '../../CustomIcons/defaultLogo.png';\r\n\r\n/* Data */\r\nimport Logo from '../../ExtendedLogo/Logo.png';\r\nimport kafici from '../../data/kafici';\r\n\r\n/* Context */\r\nimport ObjectContext, { ObjectProvider } from '../../Context/objectContext';\r\n\r\nconst ObjectLogin = ({ history }) => {\r\n\r\n    const { setID, loading } = useContext(ObjectContext);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [key, setKey] = useState(\"\");\r\n    const [id, setId] = useState(\"\");\r\n\r\n    const entering = () => {\r\n        if (!id) return;\r\n\r\n        let findData = { ..._.find(kafici, { 'id': parseInt(id, 10) }) };\r\n\r\n        if (!findData.id) {\r\n            alert(\"Nije pronađen objekat sa ovim ID-em\");\r\n        } else {\r\n            history.replace(`/durango/inputPanel/${findData.id}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"IP-Login\">\r\n            <div className=\"IP-LoginForm\">\r\n                <img src={Logo} className=\"IP-Login-Logo\" />\r\n                {/* <p>Naziv objekta</p>\r\n                <input className=\"IP-Login-Input\" type=\"text\" value={title} onChange={(e) => { setTitle(e.target.value) }} />\r\n                <p>Key</p>\r\n                <input className=\"IP-Login-Input\" type=\"text\" value={key} onChange={(e) => { setKey(e.target.value) }} /> */}\r\n                <p>ID Objekta:</p>\r\n                <input className=\"IP-Login-Input\" type=\"number\" value={id} onChange={(e) => { setId(parseInt(e.target.value), 10) }} />\r\n                <button\r\n                    className=\"IP-input-imaMesta IP-clickable\"\r\n                    onClick={() => {\r\n                        // history.push('/durango/inputPanel/' + id);\r\n                        entering();\r\n                    }}\r\n                >\r\n                    Udji\r\n                </button>\r\n            </div>\r\n            <Particles\r\n                canvasClassName=\"IP-Login-Particles\"\r\n                params={{\r\n                    particles: {\r\n                        number: {\r\n                            value: 200,\r\n                            density: {\r\n                                enable: true,\r\n                                value_area: 1000,\r\n                            }\r\n                        },\r\n                    },\r\n                    interactivity: {\r\n                        events: {\r\n                            onhover: {\r\n                                enable: true,\r\n                                mode: \"repulse\"\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ObjectLogin;","import React, {\r\n    useContext,\r\n    useEffect,\r\n    useRef,\r\n    useState,\r\n    Fragment\r\n} from 'react';\r\n\r\n/* Libraries */\r\nimport _ from 'lodash';\r\n\r\n/* webComponent */\r\nimport 'emoji-slider';\r\n\r\n/* Components */\r\nimport { Modal } from 'react-bootstrap';\r\n\r\n/* Animations */\r\nimport RubberBand from 'react-reveal/RubberBand';\r\nimport { Spring } from 'react-spring/renderprops';\r\n\r\n/* Context */\r\nimport DataContext, { DataProvider } from '../Context/dataContext';\r\n\r\nconst Claps = ({ history, data, data: { details, details: { totalClaps, numberOfGrades } } }) => {\r\n    const { changeData, User, User: { Claps }, changeClaps } = useContext(DataContext);\r\n\r\n    const userAplauza = () => {\r\n        let obj = _.find(Claps, { ID: data.id });\r\n        if (!obj) {\r\n            return 0;\r\n        }\r\n\r\n        return obj.userAplauza;\r\n    };\r\n\r\n    const [showSlider, setShowSlider] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [localClaps, setLocalClaps] = useState(0);\r\n\r\n    const slider = useRef(null);\r\n    let interval;\r\n\r\n    useEffect(() => {\r\n        slider.current.addEventListener('change', (e) => {\r\n            onChange(e.detail.value);\r\n        });\r\n\r\n        return () => {\r\n            slider.current.removeEventListener('change', (e) => {\r\n                onChange(e.detail.value);\r\n            });\r\n            clearTimeout(interval);\r\n        }\r\n    }, []);\r\n\r\n    const onChange = (value) => {\r\n        if (userAplauza() > 0) {\r\n            setShowModal(true);\r\n            return;\r\n        } else {\r\n            let ceildValue = Math.ceil(value * 5);\r\n            setLocalClaps(ceildValue);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n\r\n        if (localClaps > 0) {\r\n            clearTimeout(interval);\r\n            interval = setTimeout(() => {\r\n                finishedRating();\r\n            }, 1000);\r\n        }\r\n\r\n        return () => {\r\n            clearTimeout(interval);\r\n        }\r\n    }, [localClaps]);\r\n\r\n    const finishedRating = () => {\r\n        setShowSlider(false);\r\n\r\n        // Update caffe\r\n        changeData({\r\n            ...data,\r\n            details: {\r\n                ...details,\r\n                totalClaps: totalClaps + localClaps,\r\n                numberOfGrades: userAplauza() === 0 ? numberOfGrades + 1 : numberOfGrades\r\n            }\r\n        });\r\n\r\n        // Update User object\r\n        changeClaps({\r\n            ID: data.id,\r\n            userAplauza: localClaps\r\n        });\r\n    }\r\n\r\n    const renderNumber = (num) => {\r\n        return (\r\n            <Spring\r\n                from={{ number: 100 }}\r\n                to={{ number: parseInt(num, 10) }}>\r\n                {\r\n                    props =>\r\n                        <span className=\"boldText\">\r\n                            {\r\n                                showSlider\r\n                                    ? `+${localClaps}`\r\n                                    : Math.ceil(props.number)\r\n                            }\r\n                        </span>\r\n                }\r\n            </Spring>\r\n        )\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShowModal(false);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div\r\n                className=\"clapsContainer\"\r\n                style={{\r\n                    left: showSlider ? 0 : '' // Dok nije aktivan da može da se klikne na nešto ispod\r\n                }}\r\n            >\r\n                <RubberBand\r\n                    when={showSlider}\r\n                    duration={500}\r\n                    opposite={true}\r\n                >\r\n                    <div className={`clapsSliderContainer ${!showSlider && 'd-none'}`}>\r\n                        <emoji-slider emoji=\"👏\" value={0.5} step={0.2} ref={slider}></emoji-slider>\r\n                    </div>\r\n                </RubberBand>\r\n                <div\r\n                    className=\"clapsTriggerContainer\"\r\n                    onClick={() => {\r\n                        if(!User || !User.ID) {\r\n                            history.push('/durango/app-login');\r\n                        }\r\n\r\n                        if (userAplauza() > 0) {\r\n                            setShowModal(true);\r\n                            return;\r\n                        }\r\n                        setShowSlider(!showSlider);\r\n                    }}\r\n                >\r\n                    <span>👏</span>\r\n                    {\r\n                        renderNumber(totalClaps)\r\n                    }\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                show={showModal}\r\n                onHide={handleClose}\r\n                centered\r\n            >\r\n                <Modal.Body>\r\n                    <div className=\"reserveModalContainer\" style={{ padding: '20px' }}>\r\n                        <h6 className=\"boldText\">Hvala! Već si 👏 objektu {data.title}</h6>\r\n                        <p>Ukupno 👏: {data.details.totalClaps}</p>\r\n                        <p>Prosečno 👏: {(data.details.totalClaps / data.details.numberOfGrades).toPrecision(2)}</p>\r\n                        <p>Tvojih 👏: {userAplauza()}</p>\r\n                        <button\r\n                            className=\"detailsRow clickableRow w-50\"\r\n                            onClick={() => {\r\n                                handleClose();\r\n                            }}\r\n                        >\r\n                            <h1 className=\"detailRowText boldText\">OK</h1>\r\n                        </button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Claps;","/* React */\r\nimport React, {\r\n    useState,\r\n    useEffect,\r\n    useContext,\r\n    Fragment\r\n} from 'react';\r\nimport '../App.css';\r\n\r\n/* Libraries */\r\nimport _ from 'lodash';\r\n\r\n/* Icons */\r\n// import Star from '../icons/star.svg';\r\n// import StarOutline from '../icons/starOutline.svg';\r\nimport Star from '../icons/star.svg';\r\nimport StarOutline from '../icons/star_white_border.svg';\r\nimport Info from '../icons/infoWhite.svg';\r\nimport Book from '../icons/bookWhite.svg';\r\nimport Seat from '../icons/seat.svg';\r\nimport SeatGray from '../icons/seat_gray.svg';\r\nimport SeatOrange from '../icons/seat_orange.svg';\r\nimport NearMe from '../icons/nearMeWhite.svg';\r\n\r\n/* Default Logo */\r\nimport defaultLogo from '../CustomIcons/defaultLogo.png';\r\n\r\n/* Router */\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n/* Library */\r\nimport { isOpen } from '../library/common';\r\nimport moment from 'moment';\r\n\r\n/* Components */\r\nimport Claps from '../Components/Claps';\r\nimport AbsoluteWrapper from '../Components/AbsoluteWrapper';\r\n\r\n/* Animations */\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport Roll from 'react-reveal/Roll';\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\n/* Context */\r\nimport DataContext, { DataProvider } from '../Context/dataContext';\r\n\r\nconst placeholderObj = {\r\n    id: 0,\r\n    title: '',\r\n    logo: '',\r\n    totalSpots: 0,\r\n    freeSpots: 0,\r\n    details: {\r\n        description: '',\r\n        images: '',\r\n        workingHours: '',\r\n        location: '',\r\n        menu: ''\r\n    }\r\n}\r\n\r\nconst UkupnoMestaBadge = ({ color = 'white', object }) => {\r\n    // moment().locale('sr'); @todo\r\n\r\n    return (\r\n        <div\r\n            className=\"updatedBadge\"\r\n            style={\r\n                {\r\n                    top: 0,\r\n                    right: 0,\r\n                    bottom: 'auto',\r\n                    left: 'auto',\r\n                    color,\r\n                    fontSize: '12px',\r\n                    background: object.freeSpots === 0\r\n                        ? 'linear-gradient(to bottom left, #f83600 0%, #f9d423 100%)'\r\n                        : 'linear-gradient(to bottom left, #00c6fb 0%, #005bea 100%)'\r\n                }\r\n            }\r\n        >\r\n            <p>Ukupno mesta: {object.totalSpots}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst UpdatedBadge = ({ color = 'white', object }) => {\r\n    // moment().locale('sr'); @todo\r\n\r\n    return (\r\n        <div\r\n            className=\"updatedBadge\"\r\n            style={\r\n                {\r\n                    color,\r\n                    fontSize: '12px',\r\n                    background: object.freeSpots === 0\r\n                        ? 'linear-gradient(to top right, #f83600 0%, #f9d423 100%)'\r\n                        : 'linear-gradient(to top right, #00c6fb 0%, #005bea 100%)'\r\n                }\r\n            }\r\n        >\r\n            <p>Poslednje ažuriranje u: {moment(object.spotsUpdatedAt).format('HH:mm:ss')}</p>\r\n            {/* <img src={watchBlue} className=\"svgIconSmallest updatedBadgeIcon\" /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Details(props) {\r\n    let { id } = useParams();\r\n    const { Data, loading, changeData, setCurrentData, User, toggleFavourite, setShowComingSoonModal } = useContext(DataContext);\r\n    const [data, setData] = useState({ ...placeholderObj });\r\n    const [timer, setTimer] = useState('');\r\n\r\n    useEffect(() => {\r\n        let findData = { ..._.find(Data, { 'id': id }) || placeholderObj };\r\n\r\n        setData(findData);\r\n        setCurrentData(findData);\r\n    }, [Data]);\r\n\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n\r\n        const updateTimer = () => {\r\n            setTimer(\r\n                moment.utc(moment(User.Reservation.Time, 'HH:mm').diff(moment(), 'seconds') * 1000).format('mm:ss')\r\n            );\r\n        }\r\n\r\n        if (isReserved(data)) {\r\n            updateTimer();\r\n            interval = setInterval(() => {\r\n                updateTimer();\r\n            }, 1000);\r\n        }\r\n\r\n        return () => clearInterval(interval);\r\n    }, [data]);\r\n\r\n    const isFavourite = () => {\r\n        return User.Favourites.indexOf(data.id) !== -1\r\n    }\r\n\r\n    const getRadnoVreme = () => {\r\n        let day = moment().isoWeekday() - 1;\r\n        const open = isOpen(data.details.workingHours[day]);\r\n\r\n        return <p className=\"randoVremeParagraph\">\r\n            <span className=\"greyText\">{open ? 'Otvoreno: ' : 'Zatvoreno: '}</span>\r\n            <span style={{ color: open ? '#009A1F' : 'orangered' }}>{data.details.workingHours[day]}</span>\r\n        </p>;\r\n    }\r\n\r\n    const isReserved = (obj) => {\r\n        if (!User.Reservation) {\r\n            return false;\r\n        }\r\n\r\n        // Is current time behind Reserved Time\r\n        let flag = moment(User.Reservation.Time, 'HH:mm').isAfter();\r\n\r\n        if (User.Reservation.ID === obj.id && flag) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    const restOfPage = () => {\r\n        let day = moment().isoWeekday() - 1;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"detailsSubheader\">\r\n                    <div>\r\n                        <Zoom\r\n                            cascade\r\n                            duration={500}\r\n                        >\r\n                            <h1 className=\"detailsTitle boldText\">{data.title}</h1>\r\n                        </Zoom>\r\n                        {/* <i className=\"material-icons-outlined greyText\">\r\n                        access_time\r\n                    </i> */}\r\n                        {getRadnoVreme()}\r\n                    </div>\r\n                    <Roll\r\n                        right\r\n                        duration={500}\r\n                    >\r\n                        <div>\r\n                            <img\r\n                                src={\r\n                                    data.logo\r\n                                        ? `${process.env.PUBLIC_URL}/slike/mockLogos/${data.logo}`\r\n                                        : defaultLogo\r\n                                }\r\n                                className={\r\n                                    `detailsLogo reveal-focus-${\r\n                                    data.freeSpots && isOpen(data.details.workingHours[day]) > 0\r\n                                        ? 'blue'\r\n                                        : 'orange'\r\n                                    }`\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </Roll>\r\n                </div>\r\n                <div className=\"detailsRowMax\">\r\n                    <h1 className=\"detailRowText\">\r\n                        Slobodnih mesta:\r\n                    <span style={{\r\n                            color: data.freeSpots > 0 ? '#3185FC' : 'orangered',\r\n                        }}>\r\n                            {\r\n                                ` ${\r\n                                data.freeSpots >= 10\r\n                                    ? '10+'\r\n                                    : data.freeSpots\r\n                                } `\r\n                            }\r\n                        </span>\r\n                        {/* / {data.totalSpots} */}\r\n                    </h1>\r\n                    <img\r\n                        src={\r\n                            data.freeSpots > 0\r\n                                ? Seat\r\n                                : SeatOrange\r\n                        }\r\n                        className=\"svgIcon\"\r\n                    />\r\n                    {\r\n                        data.spotsUpdatedAt && <UpdatedBadge\r\n                            color=\"white\"\r\n                            object={data}\r\n                        />\r\n                    }\r\n                    {\r\n                        data.totalSpots && <UkupnoMestaBadge\r\n                            color=\"white\"\r\n                            object={data}\r\n                        />\r\n                    }\r\n                </div>\r\n                <div\r\n                    className=\"detailsRow clickableRow\"\r\n                    onClick={() => {\r\n                        setShowComingSoonModal(true);\r\n                        props.history.push(`/durango/app/${data.id}/reserve`);\r\n                    }}\r\n                >\r\n                    <h1 className=\"detailRowText boldText\">\r\n                        {\r\n                            isReserved(data)\r\n                                ? `Rezervisano: ${timer}`\r\n                                : 'Brza rezervacija'\r\n                        }\r\n                    </h1>\r\n                    <img\r\n                        src={Book}\r\n                        className=\"svgIconSmaller\"\r\n                    />\r\n                </div>\r\n                <div className=\"detailsRow clickableRow\" onClick={() => {\r\n                    props.history.push(`/durango/app/${data.id}/more`);\r\n                }}>\r\n                    <h1 className=\"detailRowText boldText\">O mestu</h1>\r\n                    {/* <i className=\"material-icons-outlined detailIconClickable\">\r\n                        info\r\n                </i> */}\r\n                    <img src={Info} className=\"svgIconSmaller detailIconClickable\" />\r\n                </div>\r\n                <div className=\"detailsRow clickableRow\" onClick={() => {\r\n                    toggleFavourite(data.id);\r\n                }}>\r\n                    <h1 className=\"detailRowText boldText\">\r\n                        {\r\n                            isFavourite()\r\n                                ? 'Ukloni iz omiljenih'\r\n                                : 'Dodaj u omiljene'\r\n                        }\r\n                    </h1>\r\n                    <Bounce\r\n                        spy={User.Favourites}\r\n                    >\r\n                        <img src={isFavourite() ? Star : StarOutline} className=\"svgIconSmaller detailIconClickable\" />\r\n                        {/* <i\r\n                            className=\"material-icons detailIconClickable\"\r\n                            style={{ color: isFavourite() ? 'gold' : '' }}\r\n                        >\r\n                            {isFavourite() ? 'star' : 'star_outline'}\r\n                        </i> */}\r\n                    </Bounce>\r\n                </div>\r\n                <div\r\n                    className=\"detailsRow clickableRow\"\r\n                    onClick={() => {\r\n                        window.open(data.details.location, '_blank');\r\n                    }}\r\n                >\r\n                    <h1 className=\"detailRowText boldText\">Prikaži na mapi</h1>\r\n                    <img\r\n                        src={NearMe}\r\n                        className=\"svgIconSmaller\"\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        !loading && data.id && restOfPage()\r\n    );\r\n}\r\n\r\nexport default Details;\r\n","/* React */\r\nimport React, {\r\n    useEffect,\r\n    useState,\r\n    useContext,\r\n    Fragment\r\n} from 'react';\r\n\r\n/* Libraries */\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { roundToPrecision } from '../library/common';\r\n\r\n/* Components */\r\nimport { Carousel, Modal } from 'react-bootstrap';\r\n\r\n/* Animations */\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\n/* Icons */\r\nimport Title from '../icons/titleBlue.svg';\r\nimport Watch from '../icons/watchBlue.svg';\r\nimport Call from '../icons/callBlue.svg';\r\nimport Audio from '../icons/audioBlue.svg';\r\nimport AudioLight from '../icons/audioLightblue.svg';\r\nimport Location from '../icons/locationBlue.svg';\r\nimport MenuBook from '../icons/menuBookWhite.svg';\r\nimport WorkingHours from '../CustomIcons/workHours.png';\r\n\r\n/* Slike */\r\nimport kafic1 from '../carouselMock/kafic1.jpg';\r\nimport kafic2 from '../carouselMock/kafic2.jpg';\r\nimport kafic3 from '../carouselMock/kafic3.jpg';\r\n\r\n/* Context */\r\nimport DataContext, { DataProvider } from '../Context/dataContext';\r\n\r\nconst placeholderObj = {\r\n    id: 0,\r\n    title: '',\r\n    logo: '',\r\n    totalSpots: 0,\r\n    freeSpots: 0,\r\n    details: {\r\n        description: '',\r\n        images: '',\r\n        workingHours: '',\r\n        location: '',\r\n        menu: ''\r\n    }\r\n};\r\n\r\nconst daysOfTheWeek = [\r\n    'Ponedeljak',\r\n    'Utorak',\r\n    'Sreda',\r\n    'Četvrtak',\r\n    'Petak',\r\n    'Subota',\r\n    'Nedelja'\r\n];\r\n\r\nfunction MoreDetails(props) {\r\n    let { id } = useParams();\r\n    const { Data, loading, setShowComingSoonModal } = useContext(DataContext);\r\n\r\n    const [data, setData] = useState({ ...placeholderObj });\r\n    const [showWHModal, setShowWHModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let findData = { ..._.find(Data, { 'id': id }) || placeholderObj };\r\n\r\n        setData(findData);\r\n    }, [Data]);\r\n\r\n    const renderCarousel = () => {\r\n        return (\r\n            <Carousel\r\n                style={{ marginBottom: '10px' }}\r\n                interval={2500}\r\n                slide={true}\r\n            >\r\n                {\r\n                    [kafic1, kafic2, kafic3].map((item, index) => {\r\n                        return <Carousel.Item key={index}>\r\n                            <div>\r\n                                <img\r\n                                    className=\"d-block w-100\"\r\n                                    // src={'./slike/carouselMock/' + item}\r\n                                    src={item}\r\n                                    alt={(index + 1) + '. slika'}\r\n                                />\r\n                            </div>\r\n                            {/* <Carousel.Caption>\r\n                                <h3>{'Glavni tekst ' + (index + 1)}</h3>\r\n                                <p>{'Tekst opisa ' + (index + 1)}</p>\r\n                            </Carousel.Caption> */}\r\n                        </Carousel.Item>\r\n                    })\r\n                }\r\n            </Carousel>\r\n        )\r\n    }\r\n\r\n    const renderNumber = (num) => {\r\n        return (\r\n            <Spring\r\n                from={{ number: 0 }}\r\n                to={{ number: parseInt(num, 10) }}>\r\n                {props => <span>{Math.ceil(props.number)}</span>}\r\n            </Spring>\r\n        )\r\n    }\r\n\r\n    const restOfPage = () => {\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    renderCarousel()\r\n                }\r\n                <div\r\n                    className=\"detailsRowMini\"\r\n                >\r\n                    <p className=\"detailRowTextMini\">\r\n                        <span className=\"boldText\">Naziv: </span>\r\n                        {data.title}\r\n                    </p>\r\n                    <img\r\n                        src={Title}\r\n                        className=\"svgIconSmaller\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"detailsRowMini\"\r\n                >\r\n                    <p className=\"detailRowTextMini\">\r\n                        <span className=\"boldText\">Adresa: </span>\r\n                        {data.details.address}\r\n                    </p>\r\n                    <img\r\n                        src={Location}\r\n                        className=\"svgIconSmaller\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"detailsRowMini\"\r\n                >\r\n                    <p className=\"detailRowTextMini\">\r\n                        <span className=\"boldText\">Telefon: </span>\r\n                        <a href={`tel:${data.details.phoneNumber}`}>{data.details.phoneNumber}</a>\r\n                    </p>\r\n                    <img\r\n                        src={Call}\r\n                        className=\"svgIconSmaller\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"detailsRow2Container\"\r\n                >\r\n                    <div>\r\n                        <span className=\"boldText mr-1\">Muzika: </span>\r\n                        {\r\n                            data.details.music\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"boldText mr-1\">Glasnoća: </span>\r\n                        <span className=\"d-flex\">\r\n                            {\r\n                                [1, 2, 3].map((i) => {\r\n                                    return (\r\n                                        <img\r\n                                            key={i}\r\n                                            src={\r\n                                                _.inRange(i, 0, data.details.volume + 1)\r\n                                                    ? Audio\r\n                                                    : AudioLight\r\n                                            }\r\n                                            className=\"svgIconSmaller\"\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"detailsRow2Container\"\r\n                >\r\n                    <div>\r\n                        <span className=\"boldText mr-1\">Prosečno 👏: </span>\r\n                        {\r\n                            (data.details.totalClaps / data.details.numberOfGrades).toPrecision(2)\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"boldText mr-1\">Ukupno 👏: </span>\r\n                        {\r\n                            renderNumber(data.details.totalClaps)\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"detailsRowMini\"\r\n                    onClick={() => {\r\n                        setShowWHModal(true);\r\n                    }}\r\n                >\r\n                    <p className=\"detailRowTextMini\">\r\n                        <span className=\"boldText\">Radno vreme: </span>\r\n                        {data.details.workingHours[moment().isoWeekday() - 1]}\r\n                        {' [ '}\r\n                        <span\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                            }}\r\n                            className=\"text-primary\"\r\n                        >\r\n                            više\r\n                            </span>\r\n                        {' ]'}\r\n                    </p>\r\n                    <img\r\n                        src={Watch}\r\n                        className=\"svgIconSmaller\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"detailAbout\"\r\n                >\r\n                    {data.details.description.slice(0, 135) + '...'}\r\n                </div>\r\n                <div\r\n                    className=\"detailsRow clickableRow\"\r\n                    onClick={() => {\r\n                        setShowComingSoonModal(true);\r\n                    }}\r\n                >\r\n                    <h1 className=\"detailRowText boldText\">Meni</h1>\r\n                    <img\r\n                        src={MenuBook}\r\n                        className=\"svgIconSmaller\"\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !loading && restOfPage()\r\n            }\r\n            {\r\n                showWHModal && <Modal\r\n                    show={showWHModal}\r\n                    onHide={() => { setShowWHModal(false); }}\r\n                    centered\r\n                >\r\n                    <Modal.Body>\r\n                        <div className=\"reserveModalContainer\">\r\n                            <img src={WorkingHours} style={{ width: '125px' }} />\r\n                            {\r\n                                data.details.workingHours.map((item, index) => {\r\n                                    return (\r\n                                        <p\r\n                                            key={index}\r\n                                            className={\r\n                                                index === moment().isoWeekday() - 1\r\n                                                    ? 'boldText'\r\n                                                    : ''\r\n                                            }\r\n                                        >\r\n                                            {\r\n                                                daysOfTheWeek[index] + ': ' + item\r\n                                            }\r\n                                        </p>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <button\r\n                                className=\"detailsRow clickableRow w-50\"\r\n                                onClick={() => {\r\n                                    setShowWHModal(false);\r\n                                }}\r\n                            >\r\n                                <h1 className=\"detailRowText boldText\">OK</h1>\r\n                            </button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoreDetails;\r\n","/* React */\r\nimport React, {\r\n    useEffect,\r\n    useState,\r\n    useContext,\r\n    Fragment\r\n} from 'react';\r\n\r\n/* Libraries */\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n/* Logo */\r\nimport Logo from '../ExtendedLogo/Logo.png';\r\n\r\n/* Icons */\r\nimport Plus from '../icons/plus.svg';\r\nimport Minus from '../icons/minus.svg';\r\nimport Done from '../icons/doneWhite.svg';\r\nimport Clear from '../icons/clearWhite.svg';\r\n\r\n/* Components */\r\nimport DatePicker from 'react-date-picker';\r\nimport TimePicker from 'react-time-picker'\r\nimport { Modal } from 'react-bootstrap';\r\n\r\n/* Context */\r\nimport DataContext, { DataProvider } from '../Context/dataContext';\r\n\r\nconst placeholderObj = {\r\n    id: 0,\r\n    title: '',\r\n    logo: '',\r\n    totalSpots: 0,\r\n    freeSpots: 0,\r\n    details: {\r\n        description: '',\r\n        images: '',\r\n        workingHours: '',\r\n        location: '',\r\n        menu: ''\r\n    }\r\n}\r\n\r\nfunction Reserve(props) {\r\n    let { id } = useParams();\r\n    const { Data, loading, fastReserve } = useContext(DataContext);\r\n\r\n    const [data, setData] = useState({ ...placeholderObj });\r\n    const [date, setDate] = useState(new Date());\r\n    const [time, setTime] = useState(moment().add(15, 'minutes').format('HH:mm'));\r\n    const [seats, setSeats] = useState(5);\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const handleClose = () => setShowModal(false);\r\n    const handleShow = () => setShowModal(true);\r\n\r\n    useEffect(() => {\r\n        let findData = { ..._.find(Data, { 'id': id}) || placeholderObj };\r\n\r\n        setData(findData);\r\n    }, [Data]);\r\n\r\n    const restOfPage = () => {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"reserveContainer\">\r\n                    <h3 className=\"reserveText\">Datum rezervacije</h3>\r\n                    <div className=\"reserveCalendarContainer boldText\">\r\n                        <DatePicker\r\n                            onChange={(value) => {\r\n                                setDate(value)\r\n                            }}\r\n                            value={date}\r\n                            calendarIcon={\r\n                                <i className=\"material-icons\">\r\n                                    calendar_today\r\n                        </i>\r\n                            }\r\n                            format=\"MM/dd/yyyy\"\r\n                            maxDetail=\"month\"\r\n                            minDate={new Date()}\r\n                            maxDate={moment().add(3, 'day').toDate()}\r\n                            calendarClassName=\"reserveCalendarMain\"\r\n                            className=\"reserveCalendar\"\r\n                        />\r\n                    </div>\r\n                    <h3 className=\"reserveText\">Vreme rezervacije</h3>\r\n                    <div className=\"reserveTimeContainer boldText\">\r\n                        <TimePicker\r\n                            onChange={(value) => {\r\n                                setTime(value);\r\n                            }}\r\n                            format={'HH:mm'}\r\n                            // minTime={moment().toDate()}\r\n                            value={time}\r\n                            disableClock={true}\r\n                            isOpen={false}\r\n                            clockIcon={\r\n                                <i className=\"material-icons reserveClockIcon\">\r\n                                    access_time\r\n                        </i>\r\n                            }\r\n                            className=\"reserveTime\"\r\n                        />\r\n                    </div>\r\n                    <h3 className=\"reserveText\">Broj mesta</h3>\r\n                    <div className=\"reserveSeatsContainer\">\r\n                        <button\r\n                            onClick={() => {\r\n                                if (seats > 1) {\r\n                                    setSeats(seats - 1)\r\n                                };\r\n                            }}\r\n                            className=\"reserveSeatsButton\"\r\n                        >\r\n                            <img className=\"svgIcon\" src={Minus} />\r\n                        </button>\r\n                        <div\r\n                            className=\"reserveSeatsCounter boldText\"\r\n                        >\r\n                            {seats}\r\n                        </div>\r\n                        <button\r\n                            onClick={() => {\r\n                                setSeats(seats + 1)\r\n                            }}\r\n                            className=\"reserveSeatsButton\"\r\n                        >\r\n                            {/* <Plus width=\"40px\" height=\"40px\"/> */}\r\n                            <img className=\"svgIcon\" src={Plus} />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"detailsRow clickableRow\"\r\n                    onClick={() => {\r\n                        handleShow(true);\r\n                    }}\r\n                >\r\n                    <h1 className=\"detailRowText boldText\">Rezerviši</h1>\r\n                    <img className=\"svgIconSmaller\" src={Done} />\r\n                </div>\r\n                <div\r\n                    className=\"detailsRow clickableRowCancel\"\r\n                    onClick={() => {\r\n                        props.history.push(`/durango/app/${data.id}`);\r\n                    }}\r\n                >\r\n                    <h1 className=\"detailRowText boldText\">Otkaži</h1>\r\n                    <img className=\"svgIconSmaller\" src={Clear} />\r\n                </div>\r\n                <Modal\r\n                    show={showModal}\r\n                    onHide={handleClose}\r\n                    centered\r\n                >\r\n                    <Modal.Body>\r\n                        <div className=\"reserveModalContainer\">\r\n                            <img src={Logo} className=\"reserveModalLogo\"/>\r\n                            <h3 className=\"boldText reserveModalTitle\">Konobar je odobrio!</h3>\r\n                            <p className=\"reserveModalExplanation\">\r\n                                Vaša rezervacija u objektu '{data.title}' je uspešno obavljena.\r\n                    Ne zaboravite da se pojavite najkasnije do {time}.\r\n                    </p>\r\n                            <button\r\n                                className=\"detailsRow clickableRow w-50\"\r\n                                onClick={() => {\r\n                                    handleClose();\r\n                                    props.history.push(`/durango/app/${data.id}`);\r\n                                    fastReserve(data.id, time);\r\n                                }}\r\n                            >\r\n                                <h1 className=\"detailRowText boldText\">OK</h1>\r\n                            </button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        !loading && restOfPage()\r\n    );\r\n}\r\n\r\nexport default Reserve;\r\n","import React, {\r\n    useEffect,\r\n    useContext,\r\n    useState,\r\n    Fragment\r\n} from 'react';\r\n\r\n/* Libraries */\r\nimport _ from 'lodash';\r\n\r\n/* Components */\r\nimport Claps from '../Components/Claps';\r\nimport DetailsHeader from '../Components/DetailsHeader';\r\n\r\n/* Router */\r\nimport {\r\n    useParams,\r\n    Route,\r\n    Switch,\r\n} from \"react-router-dom\";\r\n\r\n/* Pages / Screens */\r\nimport Details from '../Screens/Details';\r\nimport MoreDetails from '../Screens/MoreDetails';\r\nimport Reserve from '../Screens/Reserve';\r\n\r\n/* Animations */\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n/* Context */\r\nimport DataContext, { DataProvider } from '../Context/dataContext';\r\n\r\nconst routes = [\r\n    { path: '/durango/app/:id', name: 'Details', Component: Details },\r\n    { path: '/durango/app/:id/more', name: 'MoreDetails', Component: MoreDetails },\r\n    { path: '/durango/app/:id/reserve', name: 'Reserve', Component: Reserve },\r\n]\r\n\r\nconst ObjectProfileStackOfScreens = (props) => {\r\n    let { id } = useParams();\r\n\r\n    const { Data, loading } = useContext(DataContext);\r\n    const [data, setData] = useState();\r\n\r\n    useEffect(() => {\r\n        let findData = { ..._.find(Data, { 'id': id }) };\r\n\r\n        setData(findData);\r\n    }, [Data]);\r\n\r\n    const getBackURL = () => {\r\n        const { history: { location: { pathname } } } = props;\r\n\r\n        let splitted = pathname.split('/');\r\n\r\n        if (['more', 'reserve'].indexOf(splitted[splitted.length - 1]) !== -1) {\r\n            return `/durango/app/${data.id}`;\r\n        } else {\r\n            return `/durango/app/home`;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                data && <DetailsHeader history={props.history} back={getBackURL()} />\r\n            }\r\n            <div className=\"container\">\r\n                <TransitionGroup>\r\n                    <CSSTransition\r\n                        in={true}\r\n                        timeout={300}\r\n                        classNames=\"page\"\r\n                        unmountOnExit\r\n                        key={props.history.location.key} // Bez ovoga neće!\r\n                    >\r\n                        <Switch location={props.history.location}>\r\n                            {\r\n                                routes.map(({ path, Component }) => (\r\n                                    <Route\r\n                                        key={path}\r\n                                        exact\r\n                                        path={path}\r\n                                        render={\r\n                                            ({ match }) => (\r\n                                                <div className=\"page\">\r\n                                                    <Component history={props.history} />\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </div>\r\n\r\n            {/* <Route key={2} exact path=\"/durango/app/:id\" component={Details} />\r\n                <Route key={3} exact path=\"/durango/app/:id/more\" component={MoreDetails} />\r\n                <Route key={4} exact path=\"/durango/app/:id/reserve\" component={Reserve} /> */}\r\n            {\r\n                !loading && data && <Claps data={data} history={props.history} />\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ObjectProfileStackOfScreens;","import React, {\r\n    useEffect,\r\n    useState,\r\n    Fragment,\r\n    useContext\r\n} from 'react';\r\n\r\n/* Libraries */\r\nimport moment from 'moment';\r\nimport _ from 'lodash';\r\n\r\n/* Router */\r\nimport {\r\n    useParams,\r\n    __RouterContext,\r\n    useHistory,\r\n} from \"react-router-dom\";\r\n\r\n/* Logo */\r\nimport Logo from '../ExtendedLogo/Logo.png';\r\n\r\n/* Icons */\r\nimport BackArrow from '../icons/backArrow.svg';\r\nimport GearOutlineBlue from '../icons/gearOutlineBlue.svg';\r\n\r\n/* Context */\r\nimport ObjectContext, { ObjectProvider } from '../Context/objectContext';\r\n\r\nconst IPHeader = (props) => {\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n\r\n    const { Data, loading } = useContext(ObjectContext);\r\n\r\n    const [data, setData] = useState({});\r\n    const [currentTime, setCurrentTime] = useState(moment());\r\n\r\n    useEffect(() => {\r\n        let findData = { ..._.find(Data, { 'id': parseInt(id, 10) }) };\r\n\r\n        setData(findData);\r\n    }, [Data]);\r\n\r\n\r\n    useEffect(() => {\r\n        let interval = setInterval(() => {\r\n            setCurrentTime(moment());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, []);\r\n\r\n    const displayHeader = () => {\r\n        const { location: { pathname } } = history;\r\n        if (!data) return false;\r\n\r\n        let splitted = pathname.split('/');\r\n\r\n        if (['login'].indexOf(splitted[splitted.length - 1]) !== -1) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const renderLeftComponent = () => {\r\n        const { history: { location: { pathname } } } = props;\r\n\r\n        let splitted = pathname.split('/');\r\n\r\n        if (['settings'].indexOf(splitted[splitted.length - 1]) !== -1) {\r\n            return (\r\n                <div\r\n                    className=\"goBack\"\r\n                    onClick={() => {\r\n                        history.push(`/durango/inputPanel/${data.id}`);\r\n                    }}\r\n                >\r\n                    <img src={BackArrow} className=\"svgIconBigger\" />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"IP-time\">\r\n                    {currentTime.format(\"HH:mm:ss\")}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const renderRightComponent = () => {\r\n        const { history: { location: { pathname } } } = props;\r\n\r\n        let splitted = pathname.split('/');\r\n\r\n        if (['settings'].indexOf(splitted[splitted.length - 1]) !== -1) {\r\n            return null;\r\n        } else {\r\n            return (\r\n                <img\r\n                    src={GearOutlineBlue}\r\n                    className=\"svgIconBigger IP-settings-icon\"\r\n                    onClick={() => {\r\n                        history.push('/durango/inputPanel/' + data.id + '/settings');\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                displayHeader() && <div className={`detailsHeader`}>\r\n                    {\r\n                        renderLeftComponent()\r\n                    }\r\n                    <img src={Logo} className={`detailsDurangoLogo`} />\r\n                    {\r\n                        renderRightComponent()\r\n                    }\r\n                </div>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default IPHeader;","import React, { useEffect, useState, useContext } from 'react';\r\n\r\n/* Libraries */\r\nimport moment from 'moment';\r\nimport _ from 'lodash';\r\nimport { isOpen } from '../../library/common';\r\n\r\n/* Components */\r\nimport TimePicker from 'react-time-picker'\r\n\r\n/* Animations */\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\n/* Router */\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n/* Context */\r\nimport ObjectContext, { ObjectProvider } from '../../Context/objectContext';\r\n\r\nconst daysOfTheWeek = [\r\n    'Ponedeljak',\r\n    'Utorak',\r\n    'Sreda',\r\n    'Četvrtak',\r\n    'Petak',\r\n    'Subota',\r\n    'Nedelja'\r\n];\r\n\r\nconst ObjectSettings = ({ history }) => {\r\n    const { id } = useParams();\r\n\r\n    const { Data, loading } = useContext(ObjectContext);\r\n    const [data, setData] = useState({});\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [totalSpots, setTotalSpots] = useState(1);\r\n    const [description, setDescription] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [music, setMusic] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [workingHours, setWorkingHours] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!Data || !Data.length) return;\r\n\r\n        let findData;\r\n\r\n        if (id) {\r\n            findData = { ..._.find(Data, { 'id': parseInt(id, 10) }) };\r\n        }\r\n\r\n        if (findData.id) {\r\n            setData(findData);\r\n        } else {\r\n            history.push('/durango/inputPanel/login');\r\n        }\r\n\r\n    }, [Data]);\r\n\r\n    useEffect(() => {\r\n        if (!data || !data.id) return;\r\n\r\n        const { title, totalSpots, details: { location, address, phoneNumber, music, description, workingHours } } = data;\r\n\r\n        setTitle(title);\r\n        setTotalSpots(totalSpots);\r\n        setDescription(description);\r\n        setLocation(location);\r\n        setMusic(music);\r\n        setAddress(address);\r\n        setPhoneNumber(phoneNumber);\r\n        setWorkingHours([...workingHours]);\r\n\r\n    }, [data]);\r\n\r\n    return (\r\n        <div className=\"IP-Container\">\r\n            {\r\n                data.id && <div className=\"container\">\r\n                    <div className=\"IP-Settings-Form\">\r\n                        <div className=\"IP-Settings-Block\">\r\n                            <p className=\"boldText\">Naziv</p>\r\n                            <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"IP-Settings-Block\">\r\n                            <p className=\"boldText\">Ukupan broj mesta</p>\r\n                            <input type=\"number\" value={totalSpots} onChange={(e) => setTotalSpots(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"IP-Settings-Block\">\r\n                            <p className=\"boldText\">Adresa</p>\r\n                            <input type=\"text\" value={address} onChange={(e) => setAddress(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"IP-Settings-Block\">\r\n                            <p className=\"boldText\">Telefon</p>\r\n                            <input type=\"text\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"IP-Settings-Block\">\r\n                            <p className=\"boldText\">Tip muzike</p>\r\n                            <input type=\"text\" value={music} onChange={(e) => setMusic(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"IP-Settings-Block\">\r\n                            <p className=\"boldText\">Google Maps lokacija</p>\r\n                            <textarea className=\"IP-Settings-TextArea\" type=\"text\" value={location} onChange={(e) => setLocation(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"IP-Settings-Block\">\r\n                            <p className=\"boldText\">Opis</p>\r\n                            <textarea\r\n                                className=\"IP-Settings-TextArea\"\r\n                                type=\"text\"\r\n                                value={description}\r\n                                onChange={\r\n                                    (e) => {\r\n                                        let value = e.target.value;\r\n                                        if (value.length < description.length) {\r\n                                            setDescription(value);\r\n                                        }\r\n                                        else if (value.length > 150) return;\r\n                                        setDescription(value);\r\n                                    }\r\n                                }\r\n                            />\r\n                            <p\r\n                                style={{\r\n                                    marginBottom: '0px',\r\n                                    marginTop: '5px',\r\n                                }}\r\n                            >\r\n                                {description.length} / 150\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"IP-Settings-Block\">\r\n                            <p className=\"boldText\">Radno vreme</p>\r\n                            {\r\n                                data.details.workingHours.map((item, index) => {\r\n                                    let opening = item.split(' - ')[0];\r\n                                    let closing = item.split(' - ')[1];\r\n                                    return (\r\n                                        <div\r\n                                            style={{\r\n                                                display: 'flex',\r\n                                                flexDirection: 'column',\r\n                                                justifyContent: 'center',\r\n                                            }}\r\n                                            key={index}\r\n                                        >\r\n                                            <p\r\n                                                style={{\r\n                                                    display: 'block',\r\n                                                    marginBottom: '0px',\r\n                                                    marginTop: '10px',\r\n                                                }}\r\n                                            >\r\n                                                {daysOfTheWeek[index]}\r\n                                            </p>\r\n                                            <div\r\n                                                style={{\r\n                                                    display: 'flex',\r\n                                                    flexDirection: 'row'\r\n                                                }}\r\n                                            >\r\n                                                <TimePicker\r\n                                                    onChange={(value) => {\r\n                                                        setWorkingHours([\r\n                                                            ...workingHours.map((i, n) => {\r\n                                                                if (n === index) {\r\n                                                                    return `${value} - ${closing}`;\r\n                                                                }\r\n\r\n                                                                return i;\r\n                                                            })\r\n                                                        ])\r\n                                                    }}\r\n                                                    format={'HH:mm'}\r\n                                                    // minTime={moment().toDate()}\r\n                                                    value={opening}\r\n                                                    disableClock={true}\r\n                                                    isOpen={false}\r\n                                                    clockIcon={\r\n                                                        <i className=\"material-icons reserveClockIcon\">\r\n                                                            access_time\r\n                                                    </i>\r\n                                                    }\r\n                                                    className=\"reserveTime\"\r\n                                                />\r\n                                                <p\r\n                                                    style={{\r\n                                                        margin: '10px'\r\n                                                    }}\r\n                                                >-</p>\r\n                                                <TimePicker\r\n                                                    onChange={(value) => {\r\n                                                        setWorkingHours([\r\n                                                            ...workingHours.map((i, n) => {\r\n                                                                if (n === index) {\r\n                                                                    return `${opening} - ${value}`;\r\n                                                                }\r\n\r\n                                                                return i;\r\n                                                            })\r\n                                                        ])\r\n                                                    }}\r\n                                                    format={'HH:mm'}\r\n                                                    // minTime={moment().toDate()}\r\n                                                    value={closing}\r\n                                                    disableClock={true}\r\n                                                    isOpen={false}\r\n                                                    clockIcon={\r\n                                                        <i className=\"material-icons reserveClockIcon\">\r\n                                                            access_time\r\n                                                    </i>\r\n                                                    }\r\n                                                    className=\"reserveTime\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <Zoom bottom>\r\n                <button\r\n                    className=\"IP-input-imaMesta IP-clickable\"\r\n                    style={{\r\n                        position: 'fixed',\r\n                        bottom: '20px',\r\n                        right: '20px'\r\n                    }}\r\n                    onClick={() => {\r\n                        // API Call\r\n                    }}\r\n                >\r\n                    Sačuvaj\r\n                </button>\r\n            </Zoom>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ObjectSettings;","import React, {\r\n    useEffect,\r\n    useContext,\r\n    useState,\r\n    Fragment\r\n} from 'react';\r\n\r\n/* Libraries */\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\n/* Components */\r\nimport IPHeader from '../Components/IPHeader';\r\nimport AbsoluteWrapper from '../Components/AbsoluteWrapper';\r\n\r\n/* Router */\r\nimport {\r\n    useParams,\r\n    Route,\r\n    Switch,\r\n    __RouterContext\r\n} from \"react-router-dom\";\r\n\r\n/* Pages / Screens */\r\nimport Restaurant from '../Screens/Object/index';\r\nimport ObjectSettings from '../Screens/Object/ObjectSettings';\r\n\r\n/* Logo */\r\nimport Logo from '../ExtendedLogo/Logo.png';\r\n\r\n/* Animations */\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n/* Context */\r\nimport ObjectContext, { ObjectProvider } from '../Context/objectContext';\r\n\r\nconst routes = [\r\n    { path: '/durango/inputPanel/:id', Component: Restaurant },\r\n    { path: '/durango/inputPanel/:id/settings', Component: ObjectSettings },\r\n]\r\n\r\nconst InputPanelStackOfScreens = (props) => {\r\n    let { id } = useParams();\r\n    // const { location } = useContext(__RouterContext);\r\n\r\n    const { Data, loading } = useContext(ObjectContext);\r\n    const [data, setData] = useState();\r\n    const [volume, setVolume] = useState(2);\r\n\r\n    useEffect(() => {\r\n        if (!Data || !Data.length) {\r\n            return;\r\n        }\r\n        if (!id) {\r\n            props.history.push('/durango/inputPanel/login');\r\n        }\r\n\r\n        let findData = { ..._.find(Data, { 'id': parseInt(id, 10) }) };\r\n\r\n        if (!findData.id) {\r\n            props.history.replace(`/durango/inputPanel/login`);\r\n        } else {\r\n            setData(findData);\r\n            props.history.replace(`/durango/inputPanel/${findData.id}`);\r\n        }\r\n    }, [Data]);\r\n\r\n    useEffect(() => {\r\n        // Request na server\r\n    }, [volume]);\r\n\r\n    const renderFixedButtons = () => {\r\n        if (!data || !data.id) return null;\r\n\r\n        const { location: { pathname } } = props.history;\r\n\r\n        let splitted = pathname.split('/');\r\n\r\n        if (['settings'].indexOf(splitted[splitted.length - 1]) !== -1) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"IP-zatvoriOtvoriContainer\">Zatvori</div>\r\n                <Zoom bottom cascade>\r\n                    <div className=\"IP-volumeContainer\">\r\n                        {\r\n                            ['Tiho', 'Umereno', 'Glasno'].map((level, i) => {\r\n                                return (\r\n                                    <button\r\n                                        key={level}\r\n                                        className={`IP-volume-level ${volume === i + 1 ? 'IP-volume-active' : ''}`}\r\n                                        onClick={() => {\r\n                                            setVolume(i + 1);\r\n                                        }}\r\n                                    >\r\n                                        {level}\r\n                                    </button>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </Zoom>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                <IPHeader history={props.history} />\r\n            }\r\n            <div className=\"container\">\r\n                <TransitionGroup>\r\n                    <CSSTransition\r\n                        in={true}\r\n                        timeout={300}\r\n                        classNames=\"page\"\r\n                        unmountOnExit\r\n                        key={props.history.location.key} // Bez ovoga neće!\r\n                    >\r\n                        <Switch location={props.history.location}>\r\n                            {\r\n                                routes.map(({ path, Component }) => (\r\n                                    <Route\r\n                                        key={path}\r\n                                        exact\r\n                                        path={path}\r\n                                        render={\r\n                                            ({ match }) => (\r\n                                                <div className=\"page\">\r\n                                                    <Component match={match} history={props.history} />\r\n                                                    {\r\n                                                        renderFixedButtons()\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default InputPanelStackOfScreens;","import React, { useEffect, useState, useContext, Fragment } from 'react';\r\n\r\n/* Libraries */\r\nimport moment from 'moment';\r\nimport _ from 'lodash';\r\nimport { isOpen } from '../../library/common';\r\n\r\n/* Animations */\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport Pulse from 'react-reveal/Pulse';\r\nimport Jello from 'react-reveal/Jello';\r\n\r\n/* Router */\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n/* Default Logo */\r\nimport defaultLogo from '../../CustomIcons/defaultLogo.png';\r\n\r\n/* Context */\r\nimport ObjectContext, { ObjectProvider } from '../../Context/objectContext';\r\n\r\nconst Restaurant = ({ history }) => {\r\n    const { id } = useParams();\r\n\r\n    const { Data, loading } = useContext(ObjectContext);\r\n\r\n    const [data, setData] = useState({});\r\n    const [currentNumber, setCurrentNumber] = useState(3);\r\n\r\n    useEffect(() => {\r\n        if (!Data || !Data.length) return;\r\n\r\n        let findData;\r\n\r\n        if (id) {\r\n            findData = { ..._.find(Data, { 'id': parseInt(id, 10) }) };\r\n        }\r\n\r\n        if (findData.id) {\r\n            setData(findData);\r\n        } /* else {\r\n            history.push('/durango/inputPanel/login');\r\n        } */\r\n\r\n    }, [Data]);\r\n\r\n    useEffect(() => {\r\n        // Request na server\r\n    }, [currentNumber]);\r\n\r\n    useEffect(() => {\r\n        if (data.freeSpots || data.freeSpots === 0) {\r\n            setCurrentNumber(data.freeSpots);\r\n        }\r\n    }, [data]);\r\n\r\n    const getRadnoVreme = () => {\r\n        let day = moment().isoWeekday() - 1;\r\n        const open = isOpen(data.details.workingHours[day]);\r\n\r\n        return <p className=\"randoVremeParagraph\">\r\n            <span className=\"greyText\">{open ? 'Otvoreno: ' : 'Zatvoreno: '}</span>\r\n            <span style={{ color: open ? '#009A1F' : 'orangered' }}>{data.details.workingHours[day]}</span>\r\n        </p>;\r\n    }\r\n\r\n    const updateFreeSeats = (value) => {\r\n        if (!value) return;\r\n\r\n        setData({\r\n            ...data,\r\n            freeSpots: value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                data && data.id && <div className=\"IP-Container\">\r\n                    <div className=\"IP-data-loaded\">\r\n                        <div>\r\n                            <div className=\"IP-dataLoaded\">\r\n                                <div className=\"detailsSubheader\">\r\n                                    <div>\r\n                                        <Zoom cascade>\r\n                                            <h1 className=\"detailsTitle boldText\">{data.title}</h1>\r\n                                        </Zoom>\r\n                                        {getRadnoVreme()}\r\n                                    </div>\r\n                                    <Zoom\r\n                                        top\r\n                                        duration={1000}\r\n                                    >\r\n                                        <div>\r\n                                            <img\r\n                                                src={\r\n                                                    data.logo\r\n                                                        ? `${process.env.PUBLIC_URL}/slike/mockLogos/${data.logo}`\r\n                                                        : defaultLogo\r\n                                                }\r\n                                                className={\r\n                                                    `detailsLogo reveal-focus-${\r\n                                                    data.freeSpots && isOpen(data.details.workingHours[moment().isoWeekday() - 1]) > 0\r\n                                                        ? 'blue'\r\n                                                        : 'orange'\r\n                                                    }`\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                    </Zoom>\r\n                                </div>\r\n                                <div className=\"IP-center-upper\">\r\n                                    <h5\r\n                                        style={\r\n                                            {\r\n                                                textAlign: 'right',\r\n                                            }\r\n                                        }\r\n                                    >\r\n                                        Trenutno slobodno\r\n                                    </h5>\r\n                                    <Jello spy={currentNumber}>\r\n                                        <input\r\n                                            className=\"IP-input\"\r\n                                            type=\"number\"\r\n                                            min={0}\r\n                                            max={10}\r\n                                            value={currentNumber}\r\n                                            onChange={\r\n                                                (e) => {\r\n                                                    let { value, min, max } = e.target;\r\n                                                    value = Math.max(Number(min), Math.min(Number(max), Number(value)));\r\n\r\n                                                    setCurrentNumber(value);\r\n                                                }\r\n                                            }\r\n                                        />\r\n                                    </Jello>\r\n                                    <h5>od ukupno {data.totalSpots}</h5>\r\n                                    {/* <div className=\"IP-center-ukupnoMesta\">{data.totalSpots}</div> */}\r\n                                </div>\r\n                                <div className=\"IP-counter-container\">\r\n                                    <div className=\"IP-input-sideButton\">\r\n                                        <button\r\n                                            className={\r\n                                                `IP-input-nemaMesta IP-clickable ${\r\n                                                currentNumber === 0\r\n                                                    ? 'IP-input-selected'\r\n                                                    : ''\r\n                                                }`\r\n                                            }\r\n                                            onClick={() => {\r\n                                                setCurrentNumber(0)\r\n                                            }}\r\n                                        >\r\n                                            Nemamo mesta\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"IP-center-container\">\r\n                                        <Pulse>\r\n                                            <div className=\"IP-dial-container\">\r\n                                                {\r\n                                                    [..._.range(1, 10)].map(i => {\r\n                                                        return (\r\n                                                            <button\r\n                                                                key={i}\r\n                                                                className={\r\n                                                                    `IP-dial-button IP-clickable ${\r\n                                                                    currentNumber === i\r\n                                                                        ? 'IP-input-selected'\r\n                                                                        : ''\r\n                                                                    }`\r\n                                                                }\r\n                                                                onClick={() => {\r\n                                                                    setCurrentNumber(i)\r\n                                                                }}\r\n                                                            >\r\n                                                                {i}\r\n                                                            </button>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </Pulse>\r\n                                    </div>\r\n                                    <div className=\"IP-input-sideButton\">\r\n                                        <button\r\n                                            className={\r\n                                                `IP-input-imaMesta IP-clickable ${\r\n                                                currentNumber === 10\r\n                                                    ? 'IP-input-selected'\r\n                                                    : ''\r\n                                                }`\r\n                                            }\r\n                                            onClick={() => {\r\n                                                setCurrentNumber(10)\r\n                                            }}\r\n                                        >\r\n                                            Imamo 10+ mesta\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Restaurant;","/* React */\r\nimport React, { Fragment, useContext } from 'react';\r\nimport './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  __RouterContext,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\n/* Libraries */\r\nimport 'moment/locale/sr';\r\nimport moment from 'moment';\r\n\r\n/* Animations */\r\nimport Fade from 'react-reveal/Fade';\r\nimport {\r\n  CSSTransition,\r\n  TransitionGroup\r\n} from 'react-transition-group';\r\n\r\n/* Pages / Screens */\r\nimport Login from './Screens/LoginScreen';\r\nimport Home from './Screens/Home';\r\nimport Settings from './Screens/Settings';\r\nimport ObjectLogin from './Screens/Object/ObjectLogin';\r\n\r\n/* Stacks */\r\nimport ObjectProfileStackOfScreens from './Stacks/ObjectProfileStackOfScreens';\r\nimport InputPanelStackOfScreens from './Stacks/InputPanelStackOfScreens';\r\n\r\n/* Context */\r\nimport DataContext, { DataProvider } from './Context/dataContext';\r\nimport ObjectContext, { ObjectProvider } from './Context/objectContext';\r\n\r\nconst UserStackOfScreens = ({ history }) => {\r\n  const { location } = useContext(__RouterContext);\r\n\r\n  return (\r\n    <Fragment>\r\n      <DataProvider history={history}>\r\n        <Switch location={location}>\r\n          <Route key={1} exact path=\"/durango/app\" render={() => (<Redirect to=\"/durango/app/home\" />)} />\r\n          <Route key={2} exact path=\"/durango/app/home\" component={Home} />\r\n          <Route key={3} exact path=\"/durango/app/settings\" component={Settings} />\r\n          <Route key={4} path=\"/durango/app/:id\" render={() => <ObjectProfileStackOfScreens history={history} />} />\r\n        </Switch>\r\n      </DataProvider >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nconst ObjectStackOfScreens = ({ history }) => {\r\n  const { location } = useContext(__RouterContext);\r\n\r\n  return (\r\n    <Fragment>\r\n      <ObjectProvider history={history}>\r\n        <Switch location={location}>\r\n          <Route\r\n            exact path=\"/durango/inputPanel/login\"\r\n            render={({ match }) => <ObjectLogin history={history} match={match} />}\r\n          />\r\n          <Route\r\n            exact path=\"/durango/inputPanel\"\r\n            render={({ match }) => <ObjectLogin history={history} match={match} />}\r\n          />\r\n          <Route\r\n            path=\"/durango/inputPanel/:id\"\r\n            render={({ match }) => <InputPanelStackOfScreens history={history} match={match} />}\r\n          />\r\n        </Switch>\r\n      </ObjectProvider>\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nconst App = (props) => {\r\n  moment.locale('sr');\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route exact path=\"/durango/app-login\" component={Login} />\r\n        <Route exact path=\"/durango/\" component={Login} />\r\n        <Route path=\"/durango/app\" component={UserStackOfScreens} />\r\n        <Route path=\"/durango/inputPanel\" component={ObjectStackOfScreens} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    //CHANGED\n    //window.addEventListener('load', () => {\n    const doRegister = () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    };\n\n    // ADDED\n    // EITHER CALL REGISTER IMMEDIATELY, OR WAIT FOR WINDOW LOAD (CURRENT BEHAVIOR)\n    if (config && config.immediate) {\n      doRegister();\n    } else {\n      window.addEventListener('load', doRegister);\n    }\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  if (config && config.immediate) {\n    // TO MY SURPRISE, THESE TWO LINES RE-TRIGGERED ALL OF THE APPROPRIATE BEHAVIOR\n    navigator.serviceWorker.getRegistration(swUrl).then(registration => {\n      registration && registration.update();\n    });\n  } else {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                if (window.confirm('Restartuj aplikaciju za ažuriranje')) {\n                  window.loaction.reload();\n                  navigator.serviceWorker.skipWaiting();\n                }\n\n                console.log(\n                  'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                alert('Sadržaj je keširan za offline korišćenje.');\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();","module.exports = __webpack_public_path__ + \"static/media/plus.ce5392aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/doneWhite.e030b88c.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.46cc7ae4.svg\";","module.exports = __webpack_public_path__ + \"static/media/seat.1e91f677.svg\";","module.exports = __webpack_public_path__ + \"static/media/seat_orange.e1103410.svg\";","module.exports = __webpack_public_path__ + \"static/media/clearWhite.a4ae806c.svg\";","module.exports = __webpack_public_path__ + \"static/media/backArrow.5ad7c031.svg\";"],"sourceRoot":""}